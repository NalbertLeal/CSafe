Terminals which are not used

   COMMA
   VARIABLE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | STATEMENTS

    3 STATEMENTS: STATEMENT
    4           | STATEMENT STATEMENTS

    5 STATEMENT: ASSIGNMENT END
    6          | FOR_STATEMENT
    7          | IF_STATEMENT
    8          | WHILE_STATEMENT
    9          | BLOCK

   10 TYPE: INT_TYPE
   11     | FLOAT_TYPE
   12     | BOOLEAN_TYPE
   13     | CHAR_TYPE
   14     | STRING_TYPE
   15     | ID

   16 LOGICAL_OP: AND
   17           | OR
   18           | BITWISE_AND
   19           | BITWISE_OR
   20           | LESS_THAN
   21           | GREATER_THAN
   22           | EQUALS_THAN

   23 ARITHMETIC_OP: PLUS
   24              | MINUS
   25              | TIMES
   26              | DIVIDE
   27              | POW
   28              | MOD

   29 OPERATOR: ARITHMETIC_OP
   30         | LOGICAL_OP

   31 UNARY_OPERATOR: UNARY_PLUS
   32               | UNARY_MINUS

   33 TERM: VARIABLES
   34     | INTEGER_LITERAL
   35     | FLOAT_LITERAL
   36     | BOOLEAN_LITERAL

   37 EXPRESSION: TERM
   38           | TERM OPERATOR EXPRESSION
   39           | LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS

   40 UNARY_EXPR: TERM UNARY_OPERATOR
   41           | UNARY_OPERATOR TERM

   42 VARIABLES: ID

   43 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   44 ASSIGNMENT: VARIABLES EQUALS EXPRESSION
   45           | TYPE VARIABLES EQUALS EXPRESSION
   46           | UNARY_EXPR

   47 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

   48 ELSE_STATEMENT: ELSE STATEMENT
   49               | /* empty */

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   51 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 34
FLOAT_LITERAL (259) 35
BOOLEAN_LITERAL (260) 36
COMMA (261)
INT_TYPE (262) 10
FLOAT_TYPE (263) 11
BOOLEAN_TYPE (264) 12
CHAR_TYPE (265) 13
STRING_TYPE (266) 14
PLUS (267) 23
MINUS (268) 24
TIMES (269) 25
DIVIDE (270) 26
UNARY_MINUS (271) 32
UNARY_PLUS (272) 31
ID (273) 15 42
AND (274) 16
OR (275) 17
END (276) 5 50
EQUALS (277) 44 45
MOD (278) 28
POW (279) 27
VARIABLE (280)
BITWISE_AND (281) 18
BITWISE_OR (282) 19
LESS_THAN (283) 20
GREATER_THAN (284) 21
EQUALS_THAN (285) 22
LEFT_PARENTHESIS (286) 39 47 50 51
RIGHT_PARENTHESIS (287) 39 47 50 51
LEFT_BRACKET (288) 43 50
RIGHT_BRACKET (289) 43 50
IF (290) 47
ELSE (291) 48
FOR (292) 50
WHILE (293) 51


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1 2, on right: 0
STATEMENTS (41)
    on left: 3 4, on right: 2 4 43 50
STATEMENT (42)
    on left: 5 6 7 8 9, on right: 3 4 48
TYPE (43)
    on left: 10 11 12 13 14 15, on right: 45
LOGICAL_OP (44)
    on left: 16 17 18 19 20 21 22, on right: 30
ARITHMETIC_OP (45)
    on left: 23 24 25 26 27 28, on right: 29
OPERATOR (46)
    on left: 29 30, on right: 38
UNARY_OPERATOR (47)
    on left: 31 32, on right: 40 41
TERM (48)
    on left: 33 34 35 36, on right: 37 38 40 41
EXPRESSION (49)
    on left: 37 38 39, on right: 38 39 44 45 47 50 51
UNARY_EXPR (50)
    on left: 40 41, on right: 46
VARIABLES (51)
    on left: 42, on right: 33 44 45
BLOCK (52)
    on left: 43, on right: 9 47 51
ASSIGNMENT (53)
    on left: 44 45 46, on right: 5 50
IF_STATEMENT (54)
    on left: 47, on right: 7
ELSE_STATEMENT (55)
    on left: 48 49, on right: 47
FOR_STATEMENT (56)
    on left: 50, on right: 6
WHILE_STATEMENT (57)
    on left: 51, on right: 8


state 0

    0 $accept: . program $end

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    $default  reduce using rule 1 (program)

    program          go to state 16
    STATEMENTS       go to state 17
    STATEMENT        go to state 18
    TYPE             go to state 19
    UNARY_OPERATOR   go to state 20
    TERM             go to state 21
    UNARY_EXPR       go to state 22
    VARIABLES        go to state 23
    BLOCK            go to state 24
    ASSIGNMENT       go to state 25
    IF_STATEMENT     go to state 26
    FOR_STATEMENT    go to state 27
    WHILE_STATEMENT  go to state 28


state 1

   34 TERM: INTEGER_LITERAL .

    $default  reduce using rule 34 (TERM)


state 2

   35 TERM: FLOAT_LITERAL .

    $default  reduce using rule 35 (TERM)


state 3

   36 TERM: BOOLEAN_LITERAL .

    $default  reduce using rule 36 (TERM)


state 4

   10 TYPE: INT_TYPE .

    $default  reduce using rule 10 (TYPE)


state 5

   11 TYPE: FLOAT_TYPE .

    $default  reduce using rule 11 (TYPE)


state 6

   12 TYPE: BOOLEAN_TYPE .

    $default  reduce using rule 12 (TYPE)


state 7

   13 TYPE: CHAR_TYPE .

    $default  reduce using rule 13 (TYPE)


state 8

   14 TYPE: STRING_TYPE .

    $default  reduce using rule 14 (TYPE)


state 9

   32 UNARY_OPERATOR: UNARY_MINUS .

    $default  reduce using rule 32 (UNARY_OPERATOR)


state 10

   31 UNARY_OPERATOR: UNARY_PLUS .

    $default  reduce using rule 31 (UNARY_OPERATOR)


state 11

   15 TYPE: ID .
   42 VARIABLES: ID .

    ID        reduce using rule 15 (TYPE)
    $default  reduce using rule 42 (VARIABLES)


state 12

   43 BLOCK: LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    STATEMENTS       go to state 29
    STATEMENT        go to state 18
    TYPE             go to state 19
    UNARY_OPERATOR   go to state 20
    TERM             go to state 21
    UNARY_EXPR       go to state 22
    VARIABLES        go to state 23
    BLOCK            go to state 24
    ASSIGNMENT       go to state 25
    IF_STATEMENT     go to state 26
    FOR_STATEMENT    go to state 27
    WHILE_STATEMENT  go to state 28


state 13

   47 IF_STATEMENT: IF . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    LEFT_PARENTHESIS  shift, and go to state 30


state 14

   50 FOR_STATEMENT: FOR . LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 31


state 15

   51 WHILE_STATEMENT: WHILE . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK

    LEFT_PARENTHESIS  shift, and go to state 32


state 16

    0 $accept: program . $end

    $end  shift, and go to state 33


state 17

    2 program: STATEMENTS .

    $default  reduce using rule 2 (program)


state 18

    3 STATEMENTS: STATEMENT .
    4           | STATEMENT . STATEMENTS

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    $default  reduce using rule 3 (STATEMENTS)

    STATEMENTS       go to state 34
    STATEMENT        go to state 18
    TYPE             go to state 19
    UNARY_OPERATOR   go to state 20
    TERM             go to state 21
    UNARY_EXPR       go to state 22
    VARIABLES        go to state 23
    BLOCK            go to state 24
    ASSIGNMENT       go to state 25
    IF_STATEMENT     go to state 26
    FOR_STATEMENT    go to state 27
    WHILE_STATEMENT  go to state 28


state 19

   45 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 35

    VARIABLES  go to state 36


state 20

   41 UNARY_EXPR: UNARY_OPERATOR . TERM

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 35

    TERM       go to state 37
    VARIABLES  go to state 38


state 21

   40 UNARY_EXPR: TERM . UNARY_OPERATOR

    UNARY_MINUS  shift, and go to state 9
    UNARY_PLUS   shift, and go to state 10

    UNARY_OPERATOR  go to state 39


state 22

   46 ASSIGNMENT: UNARY_EXPR .

    $default  reduce using rule 46 (ASSIGNMENT)


state 23

   33 TERM: VARIABLES .
   44 ASSIGNMENT: VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 40

    $default  reduce using rule 33 (TERM)


state 24

    9 STATEMENT: BLOCK .

    $default  reduce using rule 9 (STATEMENT)


state 25

    5 STATEMENT: ASSIGNMENT . END

    END  shift, and go to state 41


state 26

    7 STATEMENT: IF_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


state 27

    6 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


state 28

    8 STATEMENT: WHILE_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


state 29

   43 BLOCK: LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 42


state 30

   47 IF_STATEMENT: IF LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 35
    LEFT_PARENTHESIS  shift, and go to state 43

    TERM        go to state 44
    EXPRESSION  go to state 45
    VARIABLES   go to state 38


state 31

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS . ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11

    TYPE            go to state 19
    UNARY_OPERATOR  go to state 20
    TERM            go to state 21
    UNARY_EXPR      go to state 22
    VARIABLES       go to state 23
    ASSIGNMENT      go to state 46


state 32

   51 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 35
    LEFT_PARENTHESIS  shift, and go to state 43

    TERM        go to state 44
    EXPRESSION  go to state 47
    VARIABLES   go to state 38


state 33

    0 $accept: program $end .

    $default  accept


state 34

    4 STATEMENTS: STATEMENT STATEMENTS .

    $default  reduce using rule 4 (STATEMENTS)


state 35

   42 VARIABLES: ID .

    $default  reduce using rule 42 (VARIABLES)


state 36

   45 ASSIGNMENT: TYPE VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 48


state 37

   41 UNARY_EXPR: UNARY_OPERATOR TERM .

    $default  reduce using rule 41 (UNARY_EXPR)


state 38

   33 TERM: VARIABLES .

    $default  reduce using rule 33 (TERM)


state 39

   40 UNARY_EXPR: TERM UNARY_OPERATOR .

    $default  reduce using rule 40 (UNARY_EXPR)


state 40

   44 ASSIGNMENT: VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 35
    LEFT_PARENTHESIS  shift, and go to state 43

    TERM        go to state 44
    EXPRESSION  go to state 49
    VARIABLES   go to state 38


state 41

    5 STATEMENT: ASSIGNMENT END .

    $default  reduce using rule 5 (STATEMENT)


state 42

   43 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 43 (BLOCK)


state 43

   39 EXPRESSION: LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 35
    LEFT_PARENTHESIS  shift, and go to state 43

    TERM        go to state 44
    EXPRESSION  go to state 50
    VARIABLES   go to state 38


state 44

   37 EXPRESSION: TERM .
   38           | TERM . OPERATOR EXPRESSION

    PLUS          shift, and go to state 51
    MINUS         shift, and go to state 52
    TIMES         shift, and go to state 53
    DIVIDE        shift, and go to state 54
    AND           shift, and go to state 55
    OR            shift, and go to state 56
    MOD           shift, and go to state 57
    POW           shift, and go to state 58
    BITWISE_AND   shift, and go to state 59
    BITWISE_OR    shift, and go to state 60
    LESS_THAN     shift, and go to state 61
    GREATER_THAN  shift, and go to state 62
    EQUALS_THAN   shift, and go to state 63

    $default  reduce using rule 37 (EXPRESSION)

    LOGICAL_OP     go to state 64
    ARITHMETIC_OP  go to state 65
    OPERATOR       go to state 66


state 45

   47 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    RIGHT_PARENTHESIS  shift, and go to state 67


state 46

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT . END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 68


state 47

   51 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK

    RIGHT_PARENTHESIS  shift, and go to state 69


state 48

   45 ASSIGNMENT: TYPE VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 35
    LEFT_PARENTHESIS  shift, and go to state 43

    TERM        go to state 44
    EXPRESSION  go to state 70
    VARIABLES   go to state 38


state 49

   44 ASSIGNMENT: VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 44 (ASSIGNMENT)


state 50

   39 EXPRESSION: LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 71


state 51

   23 ARITHMETIC_OP: PLUS .

    $default  reduce using rule 23 (ARITHMETIC_OP)


state 52

   24 ARITHMETIC_OP: MINUS .

    $default  reduce using rule 24 (ARITHMETIC_OP)


state 53

   25 ARITHMETIC_OP: TIMES .

    $default  reduce using rule 25 (ARITHMETIC_OP)


state 54

   26 ARITHMETIC_OP: DIVIDE .

    $default  reduce using rule 26 (ARITHMETIC_OP)


state 55

   16 LOGICAL_OP: AND .

    $default  reduce using rule 16 (LOGICAL_OP)


state 56

   17 LOGICAL_OP: OR .

    $default  reduce using rule 17 (LOGICAL_OP)


state 57

   28 ARITHMETIC_OP: MOD .

    $default  reduce using rule 28 (ARITHMETIC_OP)


state 58

   27 ARITHMETIC_OP: POW .

    $default  reduce using rule 27 (ARITHMETIC_OP)


state 59

   18 LOGICAL_OP: BITWISE_AND .

    $default  reduce using rule 18 (LOGICAL_OP)


state 60

   19 LOGICAL_OP: BITWISE_OR .

    $default  reduce using rule 19 (LOGICAL_OP)


state 61

   20 LOGICAL_OP: LESS_THAN .

    $default  reduce using rule 20 (LOGICAL_OP)


state 62

   21 LOGICAL_OP: GREATER_THAN .

    $default  reduce using rule 21 (LOGICAL_OP)


state 63

   22 LOGICAL_OP: EQUALS_THAN .

    $default  reduce using rule 22 (LOGICAL_OP)


state 64

   30 OPERATOR: LOGICAL_OP .

    $default  reduce using rule 30 (OPERATOR)


state 65

   29 OPERATOR: ARITHMETIC_OP .

    $default  reduce using rule 29 (OPERATOR)


state 66

   38 EXPRESSION: TERM OPERATOR . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 35
    LEFT_PARENTHESIS  shift, and go to state 43

    TERM        go to state 44
    EXPRESSION  go to state 72
    VARIABLES   go to state 38


state 67

   47 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK ELSE_STATEMENT

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 73


state 68

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END . EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 35
    LEFT_PARENTHESIS  shift, and go to state 43

    TERM        go to state 44
    EXPRESSION  go to state 74
    VARIABLES   go to state 38


state 69

   51 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 75


state 70

   45 ASSIGNMENT: TYPE VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 45 (ASSIGNMENT)


state 71

   39 EXPRESSION: LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS .

    $default  reduce using rule 39 (EXPRESSION)


state 72

   38 EXPRESSION: TERM OPERATOR EXPRESSION .

    $default  reduce using rule 38 (EXPRESSION)


state 73

   47 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK . ELSE_STATEMENT

    ELSE  shift, and go to state 76

    $default  reduce using rule 49 (ELSE_STATEMENT)

    ELSE_STATEMENT  go to state 77


state 74

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION . END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 78


state 75

   51 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK .

    $default  reduce using rule 51 (WHILE_STATEMENT)


state 76

   48 ELSE_STATEMENT: ELSE . STATEMENT

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    STATEMENT        go to state 79
    TYPE             go to state 19
    UNARY_OPERATOR   go to state 20
    TERM             go to state 21
    UNARY_EXPR       go to state 22
    VARIABLES        go to state 23
    BLOCK            go to state 24
    ASSIGNMENT       go to state 25
    IF_STATEMENT     go to state 26
    FOR_STATEMENT    go to state 27
    WHILE_STATEMENT  go to state 28


state 77

   47 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT .

    $default  reduce using rule 47 (IF_STATEMENT)


state 78

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END . ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11

    TYPE            go to state 19
    UNARY_OPERATOR  go to state 20
    TERM            go to state 21
    UNARY_EXPR      go to state 22
    VARIABLES       go to state 23
    ASSIGNMENT      go to state 80


state 79

   48 ELSE_STATEMENT: ELSE STATEMENT .

    $default  reduce using rule 48 (ELSE_STATEMENT)


state 80

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT . RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 81


state 81

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS . LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 82


state 82

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    STATEMENTS       go to state 83
    STATEMENT        go to state 18
    TYPE             go to state 19
    UNARY_OPERATOR   go to state 20
    TERM             go to state 21
    UNARY_EXPR       go to state 22
    VARIABLES        go to state 23
    BLOCK            go to state 24
    ASSIGNMENT       go to state 25
    IF_STATEMENT     go to state 26
    FOR_STATEMENT    go to state 27
    WHILE_STATEMENT  go to state 28


state 83

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 84


state 84

   50 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 50 (FOR_STATEMENT)
