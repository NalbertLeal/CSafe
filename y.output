Terminals which are not used

   VARIABLE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | STATEMENTS

    3 STATEMENTS: STATEMENT
    4           | STATEMENT STATEMENTS

    5 STATEMENT: ASSIGNMENT END
    6          | FOR_STATEMENT
    7          | IF_STATEMENT
    8          | WHILE_STATEMENT
    9          | FUNCTION
   10          | FUNCTION_CALL
   11          | SWITCH_STM
   12          | BLOCK

   13 TYPE: INT_TYPE
   14     | FLOAT_TYPE
   15     | BOOLEAN_TYPE
   16     | CHAR_TYPE
   17     | STRING_TYPE
   18     | ID

   19 LOGICAL_OP: AND
   20           | OR
   21           | BITWISE_AND
   22           | BITWISE_OR
   23           | LESS_THAN
   24           | GREATER_THAN
   25           | EQUALS_THAN

   26 ARITHMETIC_OP: PLUS
   27              | MINUS
   28              | TIMES
   29              | DIVIDE
   30              | POW
   31              | MOD

   32 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK

   33 TERM_LIST: TERM
   34          | TERM COMMA TERM_LIST

   35 ID_PARAMS: TYPE ID
   36          | TYPE ID COMMA ID_PARAMS

   37 FUNCTION_PARAMS: /* empty */
   38                | ID_PARAMS

   39 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END

   40 OPERATOR: ARITHMETIC_OP
   41         | LOGICAL_OP

   42 UNARY_OPERATOR: UNARY_PLUS
   43               | UNARY_MINUS

   44 TERM: VARIABLES
   45     | INTEGER_LITERAL
   46     | FLOAT_LITERAL
   47     | BOOLEAN_LITERAL

   48 EXPRESSION: TERM
   49           | TERM OPERATOR EXPRESSION
   50           | LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS

   51 UNARY_EXPR: TERM UNARY_OPERATOR
   52           | UNARY_OPERATOR TERM

   53 VARIABLES: ID

   54 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   55 ASSIGNMENT: VARIABLES EQUALS EXPRESSION
   56           | TYPE VARIABLES EQUALS EXPRESSION
   57           | UNARY_EXPR

   58 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

   59 ELSE_STATEMENT: ELSE STATEMENT
   60               | /* empty */

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   62 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

   64 CASE_STATEMENT: CASE TERM COLON STATEMENTS
   65               | CASE TERM COLON STATEMENTS BREAK END

   66 CASE_LIST: CASE_STATEMENT
   67          | CASE_STATEMENT CASE_LIST

   68 DEFAULT_STM: DEFAULT COLON STATEMENTS


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 45
FLOAT_LITERAL (259) 46
BOOLEAN_LITERAL (260) 47
COMMA (261) 34 36
COLON (262) 64 65 68
INT_TYPE (263) 13
FLOAT_TYPE (264) 14
BOOLEAN_TYPE (265) 15
CHAR_TYPE (266) 16
STRING_TYPE (267) 17
PLUS (268) 26
MINUS (269) 27
TIMES (270) 28
DIVIDE (271) 29
UNARY_MINUS (272) 43
UNARY_PLUS (273) 42
ID (274) 18 32 35 36 39 53 63
AND (275) 19
OR (276) 20
END (277) 5 39 61 65
EQUALS (278) 55 56
MOD (279) 31
POW (280) 30
VARIABLE (281)
BITWISE_AND (282) 21
BITWISE_OR (283) 22
LESS_THAN (284) 23
GREATER_THAN (285) 24
EQUALS_THAN (286) 25
LEFT_PARENTHESIS (287) 32 39 50 58 61 62 63
RIGHT_PARENTHESIS (288) 32 39 50 58 61 62 63
LEFT_BRACKET (289) 54 61 63
RIGHT_BRACKET (290) 54 61 63
IF (291) 58
ELSE (292) 59
FOR (293) 61
WHILE (294) 62
SWITCH (295) 63
CASE (296) 64 65
DEFAULT (297) 68
BREAK (298) 65


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2, on right: 0
STATEMENTS (46)
    on left: 3 4, on right: 2 4 54 61 64 65 68
STATEMENT (47)
    on left: 5 6 7 8 9 10 11 12, on right: 3 4 59
TYPE (48)
    on left: 13 14 15 16 17 18, on right: 32 35 36 56
LOGICAL_OP (49)
    on left: 19 20 21 22 23 24 25, on right: 41
ARITHMETIC_OP (50)
    on left: 26 27 28 29 30 31, on right: 40
FUNCTION (51)
    on left: 32, on right: 9
TERM_LIST (52)
    on left: 33 34, on right: 34 39
ID_PARAMS (53)
    on left: 35 36, on right: 36 38
FUNCTION_PARAMS (54)
    on left: 37 38, on right: 32
FUNCTION_CALL (55)
    on left: 39, on right: 10
OPERATOR (56)
    on left: 40 41, on right: 49
UNARY_OPERATOR (57)
    on left: 42 43, on right: 51 52
TERM (58)
    on left: 44 45 46 47, on right: 33 34 48 49 51 52 64 65
EXPRESSION (59)
    on left: 48 49 50, on right: 49 50 55 56 58 61 62
UNARY_EXPR (60)
    on left: 51 52, on right: 57
VARIABLES (61)
    on left: 53, on right: 44 55 56
BLOCK (62)
    on left: 54, on right: 12 32 58 62
ASSIGNMENT (63)
    on left: 55 56 57, on right: 5 61
IF_STATEMENT (64)
    on left: 58, on right: 7
ELSE_STATEMENT (65)
    on left: 59 60, on right: 58
FOR_STATEMENT (66)
    on left: 61, on right: 6
WHILE_STATEMENT (67)
    on left: 62, on right: 8
SWITCH_STM (68)
    on left: 63, on right: 11
CASE_STATEMENT (69)
    on left: 64 65, on right: 66 67
CASE_LIST (70)
    on left: 66 67, on right: 63 67
DEFAULT_STM (71)
    on left: 68, on right: 63


state 0

    0 $accept: . program $end

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    SWITCH           shift, and go to state 16

    $default  reduce using rule 1 (program)

    program          go to state 17
    STATEMENTS       go to state 18
    STATEMENT        go to state 19
    TYPE             go to state 20
    FUNCTION         go to state 21
    FUNCTION_CALL    go to state 22
    UNARY_OPERATOR   go to state 23
    TERM             go to state 24
    UNARY_EXPR       go to state 25
    VARIABLES        go to state 26
    BLOCK            go to state 27
    ASSIGNMENT       go to state 28
    IF_STATEMENT     go to state 29
    FOR_STATEMENT    go to state 30
    WHILE_STATEMENT  go to state 31
    SWITCH_STM       go to state 32


state 1

   45 TERM: INTEGER_LITERAL .

    $default  reduce using rule 45 (TERM)


state 2

   46 TERM: FLOAT_LITERAL .

    $default  reduce using rule 46 (TERM)


state 3

   47 TERM: BOOLEAN_LITERAL .

    $default  reduce using rule 47 (TERM)


state 4

   13 TYPE: INT_TYPE .

    $default  reduce using rule 13 (TYPE)


state 5

   14 TYPE: FLOAT_TYPE .

    $default  reduce using rule 14 (TYPE)


state 6

   15 TYPE: BOOLEAN_TYPE .

    $default  reduce using rule 15 (TYPE)


state 7

   16 TYPE: CHAR_TYPE .

    $default  reduce using rule 16 (TYPE)


state 8

   17 TYPE: STRING_TYPE .

    $default  reduce using rule 17 (TYPE)


state 9

   43 UNARY_OPERATOR: UNARY_MINUS .

    $default  reduce using rule 43 (UNARY_OPERATOR)


state 10

   42 UNARY_OPERATOR: UNARY_PLUS .

    $default  reduce using rule 42 (UNARY_OPERATOR)


state 11

   18 TYPE: ID .
   39 FUNCTION_CALL: ID . LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END
   53 VARIABLES: ID .

    LEFT_PARENTHESIS  shift, and go to state 33

    ID        reduce using rule 18 (TYPE)
    $default  reduce using rule 53 (VARIABLES)


state 12

   54 BLOCK: LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    SWITCH           shift, and go to state 16

    STATEMENTS       go to state 34
    STATEMENT        go to state 19
    TYPE             go to state 20
    FUNCTION         go to state 21
    FUNCTION_CALL    go to state 22
    UNARY_OPERATOR   go to state 23
    TERM             go to state 24
    UNARY_EXPR       go to state 25
    VARIABLES        go to state 26
    BLOCK            go to state 27
    ASSIGNMENT       go to state 28
    IF_STATEMENT     go to state 29
    FOR_STATEMENT    go to state 30
    WHILE_STATEMENT  go to state 31
    SWITCH_STM       go to state 32


state 13

   58 IF_STATEMENT: IF . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    LEFT_PARENTHESIS  shift, and go to state 35


state 14

   61 FOR_STATEMENT: FOR . LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 36


state 15

   62 WHILE_STATEMENT: WHILE . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK

    LEFT_PARENTHESIS  shift, and go to state 37


state 16

   63 SWITCH_STM: SWITCH . LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 38


state 17

    0 $accept: program . $end

    $end  shift, and go to state 39


state 18

    2 program: STATEMENTS .

    $default  reduce using rule 2 (program)


state 19

    3 STATEMENTS: STATEMENT .
    4           | STATEMENT . STATEMENTS

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    SWITCH           shift, and go to state 16

    $default  reduce using rule 3 (STATEMENTS)

    STATEMENTS       go to state 40
    STATEMENT        go to state 19
    TYPE             go to state 20
    FUNCTION         go to state 21
    FUNCTION_CALL    go to state 22
    UNARY_OPERATOR   go to state 23
    TERM             go to state 24
    UNARY_EXPR       go to state 25
    VARIABLES        go to state 26
    BLOCK            go to state 27
    ASSIGNMENT       go to state 28
    IF_STATEMENT     go to state 29
    FOR_STATEMENT    go to state 30
    WHILE_STATEMENT  go to state 31
    SWITCH_STM       go to state 32


state 20

   32 FUNCTION: TYPE . ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK
   56 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 41

    VARIABLES  go to state 42


state 21

    9 STATEMENT: FUNCTION .

    $default  reduce using rule 9 (STATEMENT)


state 22

   10 STATEMENT: FUNCTION_CALL .

    $default  reduce using rule 10 (STATEMENT)


state 23

   52 UNARY_EXPR: UNARY_OPERATOR . TERM

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 43

    TERM       go to state 44
    VARIABLES  go to state 45


state 24

   51 UNARY_EXPR: TERM . UNARY_OPERATOR

    UNARY_MINUS  shift, and go to state 9
    UNARY_PLUS   shift, and go to state 10

    UNARY_OPERATOR  go to state 46


state 25

   57 ASSIGNMENT: UNARY_EXPR .

    $default  reduce using rule 57 (ASSIGNMENT)


state 26

   44 TERM: VARIABLES .
   55 ASSIGNMENT: VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 47

    $default  reduce using rule 44 (TERM)


state 27

   12 STATEMENT: BLOCK .

    $default  reduce using rule 12 (STATEMENT)


state 28

    5 STATEMENT: ASSIGNMENT . END

    END  shift, and go to state 48


state 29

    7 STATEMENT: IF_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


state 30

    6 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


state 31

    8 STATEMENT: WHILE_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


state 32

   11 STATEMENT: SWITCH_STM .

    $default  reduce using rule 11 (STATEMENT)


state 33

   39 FUNCTION_CALL: ID LEFT_PARENTHESIS . TERM_LIST RIGHT_PARENTHESIS END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 43

    TERM_LIST  go to state 49
    TERM       go to state 50
    VARIABLES  go to state 45


state 34

   54 BLOCK: LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 51


state 35

   58 IF_STATEMENT: IF LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 43
    LEFT_PARENTHESIS  shift, and go to state 52

    TERM        go to state 53
    EXPRESSION  go to state 54
    VARIABLES   go to state 45


state 36

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS . ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 55

    TYPE            go to state 56
    UNARY_OPERATOR  go to state 23
    TERM            go to state 24
    UNARY_EXPR      go to state 25
    VARIABLES       go to state 26
    ASSIGNMENT      go to state 57


state 37

   62 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 43
    LEFT_PARENTHESIS  shift, and go to state 52

    TERM        go to state 53
    EXPRESSION  go to state 58
    VARIABLES   go to state 45


state 38

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS . ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    ID  shift, and go to state 59


state 39

    0 $accept: program $end .

    $default  accept


state 40

    4 STATEMENTS: STATEMENT STATEMENTS .

    $default  reduce using rule 4 (STATEMENTS)


state 41

   32 FUNCTION: TYPE ID . LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK
   53 VARIABLES: ID .

    LEFT_PARENTHESIS  shift, and go to state 60

    $default  reduce using rule 53 (VARIABLES)


state 42

   56 ASSIGNMENT: TYPE VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 61


state 43

   53 VARIABLES: ID .

    $default  reduce using rule 53 (VARIABLES)


state 44

   52 UNARY_EXPR: UNARY_OPERATOR TERM .

    $default  reduce using rule 52 (UNARY_EXPR)


state 45

   44 TERM: VARIABLES .

    $default  reduce using rule 44 (TERM)


state 46

   51 UNARY_EXPR: TERM UNARY_OPERATOR .

    $default  reduce using rule 51 (UNARY_EXPR)


state 47

   55 ASSIGNMENT: VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 43
    LEFT_PARENTHESIS  shift, and go to state 52

    TERM        go to state 53
    EXPRESSION  go to state 62
    VARIABLES   go to state 45


state 48

    5 STATEMENT: ASSIGNMENT END .

    $default  reduce using rule 5 (STATEMENT)


state 49

   39 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST . RIGHT_PARENTHESIS END

    RIGHT_PARENTHESIS  shift, and go to state 63


state 50

   33 TERM_LIST: TERM .
   34          | TERM . COMMA TERM_LIST

    COMMA  shift, and go to state 64

    $default  reduce using rule 33 (TERM_LIST)


state 51

   54 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 54 (BLOCK)


state 52

   50 EXPRESSION: LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 43
    LEFT_PARENTHESIS  shift, and go to state 52

    TERM        go to state 53
    EXPRESSION  go to state 65
    VARIABLES   go to state 45


state 53

   48 EXPRESSION: TERM .
   49           | TERM . OPERATOR EXPRESSION

    PLUS          shift, and go to state 66
    MINUS         shift, and go to state 67
    TIMES         shift, and go to state 68
    DIVIDE        shift, and go to state 69
    AND           shift, and go to state 70
    OR            shift, and go to state 71
    MOD           shift, and go to state 72
    POW           shift, and go to state 73
    BITWISE_AND   shift, and go to state 74
    BITWISE_OR    shift, and go to state 75
    LESS_THAN     shift, and go to state 76
    GREATER_THAN  shift, and go to state 77
    EQUALS_THAN   shift, and go to state 78

    $default  reduce using rule 48 (EXPRESSION)

    LOGICAL_OP     go to state 79
    ARITHMETIC_OP  go to state 80
    OPERATOR       go to state 81


state 54

   58 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    RIGHT_PARENTHESIS  shift, and go to state 82


state 55

   18 TYPE: ID .
   53 VARIABLES: ID .

    ID        reduce using rule 18 (TYPE)
    $default  reduce using rule 53 (VARIABLES)


state 56

   56 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 43

    VARIABLES  go to state 42


state 57

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT . END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 83


state 58

   62 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK

    RIGHT_PARENTHESIS  shift, and go to state 84


state 59

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID . RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 85


state 60

   32 FUNCTION: TYPE ID LEFT_PARENTHESIS . FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK

    INT_TYPE      shift, and go to state 4
    FLOAT_TYPE    shift, and go to state 5
    BOOLEAN_TYPE  shift, and go to state 6
    CHAR_TYPE     shift, and go to state 7
    STRING_TYPE   shift, and go to state 8
    ID            shift, and go to state 86

    $default  reduce using rule 37 (FUNCTION_PARAMS)

    TYPE             go to state 87
    ID_PARAMS        go to state 88
    FUNCTION_PARAMS  go to state 89


state 61

   56 ASSIGNMENT: TYPE VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 43
    LEFT_PARENTHESIS  shift, and go to state 52

    TERM        go to state 53
    EXPRESSION  go to state 90
    VARIABLES   go to state 45


state 62

   55 ASSIGNMENT: VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 55 (ASSIGNMENT)


state 63

   39 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS . END

    END  shift, and go to state 91


state 64

   34 TERM_LIST: TERM COMMA . TERM_LIST

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 43

    TERM_LIST  go to state 92
    TERM       go to state 50
    VARIABLES  go to state 45


state 65

   50 EXPRESSION: LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 93


state 66

   26 ARITHMETIC_OP: PLUS .

    $default  reduce using rule 26 (ARITHMETIC_OP)


state 67

   27 ARITHMETIC_OP: MINUS .

    $default  reduce using rule 27 (ARITHMETIC_OP)


state 68

   28 ARITHMETIC_OP: TIMES .

    $default  reduce using rule 28 (ARITHMETIC_OP)


state 69

   29 ARITHMETIC_OP: DIVIDE .

    $default  reduce using rule 29 (ARITHMETIC_OP)


state 70

   19 LOGICAL_OP: AND .

    $default  reduce using rule 19 (LOGICAL_OP)


state 71

   20 LOGICAL_OP: OR .

    $default  reduce using rule 20 (LOGICAL_OP)


state 72

   31 ARITHMETIC_OP: MOD .

    $default  reduce using rule 31 (ARITHMETIC_OP)


state 73

   30 ARITHMETIC_OP: POW .

    $default  reduce using rule 30 (ARITHMETIC_OP)


state 74

   21 LOGICAL_OP: BITWISE_AND .

    $default  reduce using rule 21 (LOGICAL_OP)


state 75

   22 LOGICAL_OP: BITWISE_OR .

    $default  reduce using rule 22 (LOGICAL_OP)


state 76

   23 LOGICAL_OP: LESS_THAN .

    $default  reduce using rule 23 (LOGICAL_OP)


state 77

   24 LOGICAL_OP: GREATER_THAN .

    $default  reduce using rule 24 (LOGICAL_OP)


state 78

   25 LOGICAL_OP: EQUALS_THAN .

    $default  reduce using rule 25 (LOGICAL_OP)


state 79

   41 OPERATOR: LOGICAL_OP .

    $default  reduce using rule 41 (OPERATOR)


state 80

   40 OPERATOR: ARITHMETIC_OP .

    $default  reduce using rule 40 (OPERATOR)


state 81

   49 EXPRESSION: TERM OPERATOR . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 43
    LEFT_PARENTHESIS  shift, and go to state 52

    TERM        go to state 53
    EXPRESSION  go to state 94
    VARIABLES   go to state 45


state 82

   58 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK ELSE_STATEMENT

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 95


state 83

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END . EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 43
    LEFT_PARENTHESIS  shift, and go to state 52

    TERM        go to state 53
    EXPRESSION  go to state 96
    VARIABLES   go to state 45


state 84

   62 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 97


state 85

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS . LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 98


state 86

   18 TYPE: ID .

    $default  reduce using rule 18 (TYPE)


state 87

   35 ID_PARAMS: TYPE . ID
   36          | TYPE . ID COMMA ID_PARAMS

    ID  shift, and go to state 99


state 88

   38 FUNCTION_PARAMS: ID_PARAMS .

    $default  reduce using rule 38 (FUNCTION_PARAMS)


state 89

   32 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS . RIGHT_PARENTHESIS BLOCK

    RIGHT_PARENTHESIS  shift, and go to state 100


state 90

   56 ASSIGNMENT: TYPE VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 56 (ASSIGNMENT)


state 91

   39 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END .

    $default  reduce using rule 39 (FUNCTION_CALL)


state 92

   34 TERM_LIST: TERM COMMA TERM_LIST .

    $default  reduce using rule 34 (TERM_LIST)


state 93

   50 EXPRESSION: LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS .

    $default  reduce using rule 50 (EXPRESSION)


state 94

   49 EXPRESSION: TERM OPERATOR EXPRESSION .

    $default  reduce using rule 49 (EXPRESSION)


state 95

   58 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK . ELSE_STATEMENT

    ELSE  shift, and go to state 101

    $default  reduce using rule 60 (ELSE_STATEMENT)

    ELSE_STATEMENT  go to state 102


state 96

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION . END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 103


state 97

   62 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK .

    $default  reduce using rule 62 (WHILE_STATEMENT)


state 98

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET . CASE_LIST DEFAULT_STM RIGHT_BRACKET

    CASE  shift, and go to state 104

    CASE_STATEMENT  go to state 105
    CASE_LIST       go to state 106


state 99

   35 ID_PARAMS: TYPE ID .
   36          | TYPE ID . COMMA ID_PARAMS

    COMMA  shift, and go to state 107

    $default  reduce using rule 35 (ID_PARAMS)


state 100

   32 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS . BLOCK

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 108


state 101

   59 ELSE_STATEMENT: ELSE . STATEMENT

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    SWITCH           shift, and go to state 16

    STATEMENT        go to state 109
    TYPE             go to state 20
    FUNCTION         go to state 21
    FUNCTION_CALL    go to state 22
    UNARY_OPERATOR   go to state 23
    TERM             go to state 24
    UNARY_EXPR       go to state 25
    VARIABLES        go to state 26
    BLOCK            go to state 27
    ASSIGNMENT       go to state 28
    IF_STATEMENT     go to state 29
    FOR_STATEMENT    go to state 30
    WHILE_STATEMENT  go to state 31
    SWITCH_STM       go to state 32


state 102

   58 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT .

    $default  reduce using rule 58 (IF_STATEMENT)


state 103

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END . ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 55

    TYPE            go to state 56
    UNARY_OPERATOR  go to state 23
    TERM            go to state 24
    UNARY_EXPR      go to state 25
    VARIABLES       go to state 26
    ASSIGNMENT      go to state 110


state 104

   64 CASE_STATEMENT: CASE . TERM COLON STATEMENTS
   65               | CASE . TERM COLON STATEMENTS BREAK END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 43

    TERM       go to state 111
    VARIABLES  go to state 45


state 105

   66 CASE_LIST: CASE_STATEMENT .
   67          | CASE_STATEMENT . CASE_LIST

    CASE  shift, and go to state 104

    $default  reduce using rule 66 (CASE_LIST)

    CASE_STATEMENT  go to state 105
    CASE_LIST       go to state 112


state 106

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST . DEFAULT_STM RIGHT_BRACKET

    DEFAULT  shift, and go to state 113

    DEFAULT_STM  go to state 114


state 107

   36 ID_PARAMS: TYPE ID COMMA . ID_PARAMS

    INT_TYPE      shift, and go to state 4
    FLOAT_TYPE    shift, and go to state 5
    BOOLEAN_TYPE  shift, and go to state 6
    CHAR_TYPE     shift, and go to state 7
    STRING_TYPE   shift, and go to state 8
    ID            shift, and go to state 86

    TYPE       go to state 87
    ID_PARAMS  go to state 115


state 108

   32 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK .

    $default  reduce using rule 32 (FUNCTION)


state 109

   59 ELSE_STATEMENT: ELSE STATEMENT .

    $default  reduce using rule 59 (ELSE_STATEMENT)


state 110

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT . RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 116


state 111

   64 CASE_STATEMENT: CASE TERM . COLON STATEMENTS
   65               | CASE TERM . COLON STATEMENTS BREAK END

    COLON  shift, and go to state 117


state 112

   67 CASE_LIST: CASE_STATEMENT CASE_LIST .

    $default  reduce using rule 67 (CASE_LIST)


state 113

   68 DEFAULT_STM: DEFAULT . COLON STATEMENTS

    COLON  shift, and go to state 118


state 114

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 119


state 115

   36 ID_PARAMS: TYPE ID COMMA ID_PARAMS .

    $default  reduce using rule 36 (ID_PARAMS)


state 116

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS . LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 120


state 117

   64 CASE_STATEMENT: CASE TERM COLON . STATEMENTS
   65               | CASE TERM COLON . STATEMENTS BREAK END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    SWITCH           shift, and go to state 16

    STATEMENTS       go to state 121
    STATEMENT        go to state 19
    TYPE             go to state 20
    FUNCTION         go to state 21
    FUNCTION_CALL    go to state 22
    UNARY_OPERATOR   go to state 23
    TERM             go to state 24
    UNARY_EXPR       go to state 25
    VARIABLES        go to state 26
    BLOCK            go to state 27
    ASSIGNMENT       go to state 28
    IF_STATEMENT     go to state 29
    FOR_STATEMENT    go to state 30
    WHILE_STATEMENT  go to state 31
    SWITCH_STM       go to state 32


state 118

   68 DEFAULT_STM: DEFAULT COLON . STATEMENTS

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    SWITCH           shift, and go to state 16

    STATEMENTS       go to state 122
    STATEMENT        go to state 19
    TYPE             go to state 20
    FUNCTION         go to state 21
    FUNCTION_CALL    go to state 22
    UNARY_OPERATOR   go to state 23
    TERM             go to state 24
    UNARY_EXPR       go to state 25
    VARIABLES        go to state 26
    BLOCK            go to state 27
    ASSIGNMENT       go to state 28
    IF_STATEMENT     go to state 29
    FOR_STATEMENT    go to state 30
    WHILE_STATEMENT  go to state 31
    SWITCH_STM       go to state 32


state 119

   63 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET .

    $default  reduce using rule 63 (SWITCH_STM)


state 120

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    SWITCH           shift, and go to state 16

    STATEMENTS       go to state 123
    STATEMENT        go to state 19
    TYPE             go to state 20
    FUNCTION         go to state 21
    FUNCTION_CALL    go to state 22
    UNARY_OPERATOR   go to state 23
    TERM             go to state 24
    UNARY_EXPR       go to state 25
    VARIABLES        go to state 26
    BLOCK            go to state 27
    ASSIGNMENT       go to state 28
    IF_STATEMENT     go to state 29
    FOR_STATEMENT    go to state 30
    WHILE_STATEMENT  go to state 31
    SWITCH_STM       go to state 32


state 121

   64 CASE_STATEMENT: CASE TERM COLON STATEMENTS .
   65               | CASE TERM COLON STATEMENTS . BREAK END

    BREAK  shift, and go to state 124

    $default  reduce using rule 64 (CASE_STATEMENT)


state 122

   68 DEFAULT_STM: DEFAULT COLON STATEMENTS .

    $default  reduce using rule 68 (DEFAULT_STM)


state 123

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 125


state 124

   65 CASE_STATEMENT: CASE TERM COLON STATEMENTS BREAK . END

    END  shift, and go to state 126


state 125

   61 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 61 (FOR_STATEMENT)


state 126

   65 CASE_STATEMENT: CASE TERM COLON STATEMENTS BREAK END .

    $default  reduce using rule 65 (CASE_STATEMENT)
