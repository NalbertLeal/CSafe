Terminals which are not used

   VARIABLE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | STATEMENTS

    3 STATEMENTS: STATEMENT
    4           | STATEMENT STATEMENTS

    5 STATEMENT: ASSIGNMENT END
    6          | FOR_STATEMENT
    7          | IF_STATEMENT
    8          | WHILE_STATEMENT
    9          | FUNCTION
   10          | FUNCTION_CALL
   11          | BLOCK

   12 TYPE: INT_TYPE
   13     | FLOAT_TYPE
   14     | BOOLEAN_TYPE
   15     | CHAR_TYPE
   16     | STRING_TYPE
   17     | ID

   18 LOGICAL_OP: AND
   19           | OR
   20           | BITWISE_AND
   21           | BITWISE_OR
   22           | LESS_THAN
   23           | GREATER_THAN
   24           | EQUALS_THAN

   25 ARITHMETIC_OP: PLUS
   26              | MINUS
   27              | TIMES
   28              | DIVIDE
   29              | POW
   30              | MOD

   31 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK

   32 TERM_LIST: TERM
   33          | TERM COMMA TERM_LIST

   34 ID_PARAMS: TYPE ID
   35          | TYPE ID COMMA ID_PARAMS

   36 FUNCTION_PARAMS: /* empty */
   37                | ID_PARAMS

   38 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END

   39 OPERATOR: ARITHMETIC_OP
   40         | LOGICAL_OP

   41 UNARY_OPERATOR: UNARY_PLUS
   42               | UNARY_MINUS

   43 TERM: VARIABLES
   44     | INTEGER_LITERAL
   45     | FLOAT_LITERAL
   46     | BOOLEAN_LITERAL

   47 EXPRESSION: TERM
   48           | TERM OPERATOR EXPRESSION
   49           | LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS

   50 UNARY_EXPR: TERM UNARY_OPERATOR
   51           | UNARY_OPERATOR TERM

   52 VARIABLES: ID

   53 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   54 ASSIGNMENT: VARIABLES EQUALS EXPRESSION
   55           | TYPE VARIABLES EQUALS EXPRESSION
   56           | UNARY_EXPR

   57 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

   58 ELSE_STATEMENT: ELSE STATEMENT
   59               | /* empty */

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   61 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 44
FLOAT_LITERAL (259) 45
BOOLEAN_LITERAL (260) 46
COMMA (261) 33 35
INT_TYPE (262) 12
FLOAT_TYPE (263) 13
BOOLEAN_TYPE (264) 14
CHAR_TYPE (265) 15
STRING_TYPE (266) 16
PLUS (267) 25
MINUS (268) 26
TIMES (269) 27
DIVIDE (270) 28
UNARY_MINUS (271) 42
UNARY_PLUS (272) 41
ID (273) 17 31 34 35 38 52
AND (274) 18
OR (275) 19
END (276) 5 38 60
EQUALS (277) 54 55
MOD (278) 30
POW (279) 29
VARIABLE (280)
BITWISE_AND (281) 20
BITWISE_OR (282) 21
LESS_THAN (283) 22
GREATER_THAN (284) 23
EQUALS_THAN (285) 24
LEFT_PARENTHESIS (286) 31 38 49 57 60 61
RIGHT_PARENTHESIS (287) 31 38 49 57 60 61
LEFT_BRACKET (288) 53 60
RIGHT_BRACKET (289) 53 60
IF (290) 57
ELSE (291) 58
FOR (292) 60
WHILE (293) 61


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1 2, on right: 0
STATEMENTS (41)
    on left: 3 4, on right: 2 4 53 60
STATEMENT (42)
    on left: 5 6 7 8 9 10 11, on right: 3 4 58
TYPE (43)
    on left: 12 13 14 15 16 17, on right: 31 34 35 55
LOGICAL_OP (44)
    on left: 18 19 20 21 22 23 24, on right: 40
ARITHMETIC_OP (45)
    on left: 25 26 27 28 29 30, on right: 39
FUNCTION (46)
    on left: 31, on right: 9
TERM_LIST (47)
    on left: 32 33, on right: 33 38
ID_PARAMS (48)
    on left: 34 35, on right: 35 37
FUNCTION_PARAMS (49)
    on left: 36 37, on right: 31
FUNCTION_CALL (50)
    on left: 38, on right: 10
OPERATOR (51)
    on left: 39 40, on right: 48
UNARY_OPERATOR (52)
    on left: 41 42, on right: 50 51
TERM (53)
    on left: 43 44 45 46, on right: 32 33 47 48 50 51
EXPRESSION (54)
    on left: 47 48 49, on right: 48 49 54 55 57 60 61
UNARY_EXPR (55)
    on left: 50 51, on right: 56
VARIABLES (56)
    on left: 52, on right: 43 54 55
BLOCK (57)
    on left: 53, on right: 11 31 57 61
ASSIGNMENT (58)
    on left: 54 55 56, on right: 5 60
IF_STATEMENT (59)
    on left: 57, on right: 7
ELSE_STATEMENT (60)
    on left: 58 59, on right: 57
FOR_STATEMENT (61)
    on left: 60, on right: 6
WHILE_STATEMENT (62)
    on left: 61, on right: 8


state 0

    0 $accept: . program $end

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    $default  reduce using rule 1 (program)

    program          go to state 16
    STATEMENTS       go to state 17
    STATEMENT        go to state 18
    TYPE             go to state 19
    FUNCTION         go to state 20
    FUNCTION_CALL    go to state 21
    UNARY_OPERATOR   go to state 22
    TERM             go to state 23
    UNARY_EXPR       go to state 24
    VARIABLES        go to state 25
    BLOCK            go to state 26
    ASSIGNMENT       go to state 27
    IF_STATEMENT     go to state 28
    FOR_STATEMENT    go to state 29
    WHILE_STATEMENT  go to state 30


state 1

   44 TERM: INTEGER_LITERAL .

    $default  reduce using rule 44 (TERM)


state 2

   45 TERM: FLOAT_LITERAL .

    $default  reduce using rule 45 (TERM)


state 3

   46 TERM: BOOLEAN_LITERAL .

    $default  reduce using rule 46 (TERM)


state 4

   12 TYPE: INT_TYPE .

    $default  reduce using rule 12 (TYPE)


state 5

   13 TYPE: FLOAT_TYPE .

    $default  reduce using rule 13 (TYPE)


state 6

   14 TYPE: BOOLEAN_TYPE .

    $default  reduce using rule 14 (TYPE)


state 7

   15 TYPE: CHAR_TYPE .

    $default  reduce using rule 15 (TYPE)


state 8

   16 TYPE: STRING_TYPE .

    $default  reduce using rule 16 (TYPE)


state 9

   42 UNARY_OPERATOR: UNARY_MINUS .

    $default  reduce using rule 42 (UNARY_OPERATOR)


state 10

   41 UNARY_OPERATOR: UNARY_PLUS .

    $default  reduce using rule 41 (UNARY_OPERATOR)


state 11

   17 TYPE: ID .
   38 FUNCTION_CALL: ID . LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END
   52 VARIABLES: ID .

    LEFT_PARENTHESIS  shift, and go to state 31

    ID        reduce using rule 17 (TYPE)
    $default  reduce using rule 52 (VARIABLES)


state 12

   53 BLOCK: LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    STATEMENTS       go to state 32
    STATEMENT        go to state 18
    TYPE             go to state 19
    FUNCTION         go to state 20
    FUNCTION_CALL    go to state 21
    UNARY_OPERATOR   go to state 22
    TERM             go to state 23
    UNARY_EXPR       go to state 24
    VARIABLES        go to state 25
    BLOCK            go to state 26
    ASSIGNMENT       go to state 27
    IF_STATEMENT     go to state 28
    FOR_STATEMENT    go to state 29
    WHILE_STATEMENT  go to state 30


state 13

   57 IF_STATEMENT: IF . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    LEFT_PARENTHESIS  shift, and go to state 33


state 14

   60 FOR_STATEMENT: FOR . LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 34


state 15

   61 WHILE_STATEMENT: WHILE . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK

    LEFT_PARENTHESIS  shift, and go to state 35


state 16

    0 $accept: program . $end

    $end  shift, and go to state 36


state 17

    2 program: STATEMENTS .

    $default  reduce using rule 2 (program)


state 18

    3 STATEMENTS: STATEMENT .
    4           | STATEMENT . STATEMENTS

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    $default  reduce using rule 3 (STATEMENTS)

    STATEMENTS       go to state 37
    STATEMENT        go to state 18
    TYPE             go to state 19
    FUNCTION         go to state 20
    FUNCTION_CALL    go to state 21
    UNARY_OPERATOR   go to state 22
    TERM             go to state 23
    UNARY_EXPR       go to state 24
    VARIABLES        go to state 25
    BLOCK            go to state 26
    ASSIGNMENT       go to state 27
    IF_STATEMENT     go to state 28
    FOR_STATEMENT    go to state 29
    WHILE_STATEMENT  go to state 30


state 19

   31 FUNCTION: TYPE . ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK
   55 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 38

    VARIABLES  go to state 39


state 20

    9 STATEMENT: FUNCTION .

    $default  reduce using rule 9 (STATEMENT)


state 21

   10 STATEMENT: FUNCTION_CALL .

    $default  reduce using rule 10 (STATEMENT)


state 22

   51 UNARY_EXPR: UNARY_OPERATOR . TERM

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM       go to state 41
    VARIABLES  go to state 42


state 23

   50 UNARY_EXPR: TERM . UNARY_OPERATOR

    UNARY_MINUS  shift, and go to state 9
    UNARY_PLUS   shift, and go to state 10

    UNARY_OPERATOR  go to state 43


state 24

   56 ASSIGNMENT: UNARY_EXPR .

    $default  reduce using rule 56 (ASSIGNMENT)


state 25

   43 TERM: VARIABLES .
   54 ASSIGNMENT: VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 44

    $default  reduce using rule 43 (TERM)


state 26

   11 STATEMENT: BLOCK .

    $default  reduce using rule 11 (STATEMENT)


state 27

    5 STATEMENT: ASSIGNMENT . END

    END  shift, and go to state 45


state 28

    7 STATEMENT: IF_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


state 29

    6 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


state 30

    8 STATEMENT: WHILE_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


state 31

   38 FUNCTION_CALL: ID LEFT_PARENTHESIS . TERM_LIST RIGHT_PARENTHESIS END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM_LIST  go to state 46
    TERM       go to state 47
    VARIABLES  go to state 42


state 32

   53 BLOCK: LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 48


state 33

   57 IF_STATEMENT: IF LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 49

    TERM        go to state 50
    EXPRESSION  go to state 51
    VARIABLES   go to state 42


state 34

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS . ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 52

    TYPE            go to state 53
    UNARY_OPERATOR  go to state 22
    TERM            go to state 23
    UNARY_EXPR      go to state 24
    VARIABLES       go to state 25
    ASSIGNMENT      go to state 54


state 35

   61 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 49

    TERM        go to state 50
    EXPRESSION  go to state 55
    VARIABLES   go to state 42


state 36

    0 $accept: program $end .

    $default  accept


state 37

    4 STATEMENTS: STATEMENT STATEMENTS .

    $default  reduce using rule 4 (STATEMENTS)


state 38

   31 FUNCTION: TYPE ID . LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK
   52 VARIABLES: ID .

    LEFT_PARENTHESIS  shift, and go to state 56

    $default  reduce using rule 52 (VARIABLES)


state 39

   55 ASSIGNMENT: TYPE VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 57


state 40

   52 VARIABLES: ID .

    $default  reduce using rule 52 (VARIABLES)


state 41

   51 UNARY_EXPR: UNARY_OPERATOR TERM .

    $default  reduce using rule 51 (UNARY_EXPR)


state 42

   43 TERM: VARIABLES .

    $default  reduce using rule 43 (TERM)


state 43

   50 UNARY_EXPR: TERM UNARY_OPERATOR .

    $default  reduce using rule 50 (UNARY_EXPR)


state 44

   54 ASSIGNMENT: VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 49

    TERM        go to state 50
    EXPRESSION  go to state 58
    VARIABLES   go to state 42


state 45

    5 STATEMENT: ASSIGNMENT END .

    $default  reduce using rule 5 (STATEMENT)


state 46

   38 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST . RIGHT_PARENTHESIS END

    RIGHT_PARENTHESIS  shift, and go to state 59


state 47

   32 TERM_LIST: TERM .
   33          | TERM . COMMA TERM_LIST

    COMMA  shift, and go to state 60

    $default  reduce using rule 32 (TERM_LIST)


state 48

   53 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 53 (BLOCK)


state 49

   49 EXPRESSION: LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 49

    TERM        go to state 50
    EXPRESSION  go to state 61
    VARIABLES   go to state 42


state 50

   47 EXPRESSION: TERM .
   48           | TERM . OPERATOR EXPRESSION

    PLUS          shift, and go to state 62
    MINUS         shift, and go to state 63
    TIMES         shift, and go to state 64
    DIVIDE        shift, and go to state 65
    AND           shift, and go to state 66
    OR            shift, and go to state 67
    MOD           shift, and go to state 68
    POW           shift, and go to state 69
    BITWISE_AND   shift, and go to state 70
    BITWISE_OR    shift, and go to state 71
    LESS_THAN     shift, and go to state 72
    GREATER_THAN  shift, and go to state 73
    EQUALS_THAN   shift, and go to state 74

    $default  reduce using rule 47 (EXPRESSION)

    LOGICAL_OP     go to state 75
    ARITHMETIC_OP  go to state 76
    OPERATOR       go to state 77


state 51

   57 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    RIGHT_PARENTHESIS  shift, and go to state 78


state 52

   17 TYPE: ID .
   52 VARIABLES: ID .

    ID        reduce using rule 17 (TYPE)
    $default  reduce using rule 52 (VARIABLES)


state 53

   55 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 40

    VARIABLES  go to state 39


state 54

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT . END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 79


state 55

   61 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK

    RIGHT_PARENTHESIS  shift, and go to state 80


state 56

   31 FUNCTION: TYPE ID LEFT_PARENTHESIS . FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK

    INT_TYPE      shift, and go to state 4
    FLOAT_TYPE    shift, and go to state 5
    BOOLEAN_TYPE  shift, and go to state 6
    CHAR_TYPE     shift, and go to state 7
    STRING_TYPE   shift, and go to state 8
    ID            shift, and go to state 81

    $default  reduce using rule 36 (FUNCTION_PARAMS)

    TYPE             go to state 82
    ID_PARAMS        go to state 83
    FUNCTION_PARAMS  go to state 84


state 57

   55 ASSIGNMENT: TYPE VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 49

    TERM        go to state 50
    EXPRESSION  go to state 85
    VARIABLES   go to state 42


state 58

   54 ASSIGNMENT: VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 54 (ASSIGNMENT)


state 59

   38 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS . END

    END  shift, and go to state 86


state 60

   33 TERM_LIST: TERM COMMA . TERM_LIST

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM_LIST  go to state 87
    TERM       go to state 47
    VARIABLES  go to state 42


state 61

   49 EXPRESSION: LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 88


state 62

   25 ARITHMETIC_OP: PLUS .

    $default  reduce using rule 25 (ARITHMETIC_OP)


state 63

   26 ARITHMETIC_OP: MINUS .

    $default  reduce using rule 26 (ARITHMETIC_OP)


state 64

   27 ARITHMETIC_OP: TIMES .

    $default  reduce using rule 27 (ARITHMETIC_OP)


state 65

   28 ARITHMETIC_OP: DIVIDE .

    $default  reduce using rule 28 (ARITHMETIC_OP)


state 66

   18 LOGICAL_OP: AND .

    $default  reduce using rule 18 (LOGICAL_OP)


state 67

   19 LOGICAL_OP: OR .

    $default  reduce using rule 19 (LOGICAL_OP)


state 68

   30 ARITHMETIC_OP: MOD .

    $default  reduce using rule 30 (ARITHMETIC_OP)


state 69

   29 ARITHMETIC_OP: POW .

    $default  reduce using rule 29 (ARITHMETIC_OP)


state 70

   20 LOGICAL_OP: BITWISE_AND .

    $default  reduce using rule 20 (LOGICAL_OP)


state 71

   21 LOGICAL_OP: BITWISE_OR .

    $default  reduce using rule 21 (LOGICAL_OP)


state 72

   22 LOGICAL_OP: LESS_THAN .

    $default  reduce using rule 22 (LOGICAL_OP)


state 73

   23 LOGICAL_OP: GREATER_THAN .

    $default  reduce using rule 23 (LOGICAL_OP)


state 74

   24 LOGICAL_OP: EQUALS_THAN .

    $default  reduce using rule 24 (LOGICAL_OP)


state 75

   40 OPERATOR: LOGICAL_OP .

    $default  reduce using rule 40 (OPERATOR)


state 76

   39 OPERATOR: ARITHMETIC_OP .

    $default  reduce using rule 39 (OPERATOR)


state 77

   48 EXPRESSION: TERM OPERATOR . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 49

    TERM        go to state 50
    EXPRESSION  go to state 89
    VARIABLES   go to state 42


state 78

   57 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK ELSE_STATEMENT

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 90


state 79

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END . EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 49

    TERM        go to state 50
    EXPRESSION  go to state 91
    VARIABLES   go to state 42


state 80

   61 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 92


state 81

   17 TYPE: ID .

    $default  reduce using rule 17 (TYPE)


state 82

   34 ID_PARAMS: TYPE . ID
   35          | TYPE . ID COMMA ID_PARAMS

    ID  shift, and go to state 93


state 83

   37 FUNCTION_PARAMS: ID_PARAMS .

    $default  reduce using rule 37 (FUNCTION_PARAMS)


state 84

   31 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS . RIGHT_PARENTHESIS BLOCK

    RIGHT_PARENTHESIS  shift, and go to state 94


state 85

   55 ASSIGNMENT: TYPE VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 55 (ASSIGNMENT)


state 86

   38 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END .

    $default  reduce using rule 38 (FUNCTION_CALL)


state 87

   33 TERM_LIST: TERM COMMA TERM_LIST .

    $default  reduce using rule 33 (TERM_LIST)


state 88

   49 EXPRESSION: LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS .

    $default  reduce using rule 49 (EXPRESSION)


state 89

   48 EXPRESSION: TERM OPERATOR EXPRESSION .

    $default  reduce using rule 48 (EXPRESSION)


state 90

   57 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK . ELSE_STATEMENT

    ELSE  shift, and go to state 95

    $default  reduce using rule 59 (ELSE_STATEMENT)

    ELSE_STATEMENT  go to state 96


state 91

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION . END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 97


state 92

   61 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK .

    $default  reduce using rule 61 (WHILE_STATEMENT)


state 93

   34 ID_PARAMS: TYPE ID .
   35          | TYPE ID . COMMA ID_PARAMS

    COMMA  shift, and go to state 98

    $default  reduce using rule 34 (ID_PARAMS)


state 94

   31 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS . BLOCK

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 99


state 95

   58 ELSE_STATEMENT: ELSE . STATEMENT

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    STATEMENT        go to state 100
    TYPE             go to state 19
    FUNCTION         go to state 20
    FUNCTION_CALL    go to state 21
    UNARY_OPERATOR   go to state 22
    TERM             go to state 23
    UNARY_EXPR       go to state 24
    VARIABLES        go to state 25
    BLOCK            go to state 26
    ASSIGNMENT       go to state 27
    IF_STATEMENT     go to state 28
    FOR_STATEMENT    go to state 29
    WHILE_STATEMENT  go to state 30


state 96

   57 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT .

    $default  reduce using rule 57 (IF_STATEMENT)


state 97

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END . ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 52

    TYPE            go to state 53
    UNARY_OPERATOR  go to state 22
    TERM            go to state 23
    UNARY_EXPR      go to state 24
    VARIABLES       go to state 25
    ASSIGNMENT      go to state 101


state 98

   35 ID_PARAMS: TYPE ID COMMA . ID_PARAMS

    INT_TYPE      shift, and go to state 4
    FLOAT_TYPE    shift, and go to state 5
    BOOLEAN_TYPE  shift, and go to state 6
    CHAR_TYPE     shift, and go to state 7
    STRING_TYPE   shift, and go to state 8
    ID            shift, and go to state 81

    TYPE       go to state 82
    ID_PARAMS  go to state 102


state 99

   31 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK .

    $default  reduce using rule 31 (FUNCTION)


state 100

   58 ELSE_STATEMENT: ELSE STATEMENT .

    $default  reduce using rule 58 (ELSE_STATEMENT)


state 101

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT . RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 103


state 102

   35 ID_PARAMS: TYPE ID COMMA ID_PARAMS .

    $default  reduce using rule 35 (ID_PARAMS)


state 103

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS . LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 104


state 104

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15

    STATEMENTS       go to state 105
    STATEMENT        go to state 18
    TYPE             go to state 19
    FUNCTION         go to state 20
    FUNCTION_CALL    go to state 21
    UNARY_OPERATOR   go to state 22
    TERM             go to state 23
    UNARY_EXPR       go to state 24
    VARIABLES        go to state 25
    BLOCK            go to state 26
    ASSIGNMENT       go to state 27
    IF_STATEMENT     go to state 28
    FOR_STATEMENT    go to state 29
    WHILE_STATEMENT  go to state 30


state 105

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 106


state 106

   60 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 60 (FOR_STATEMENT)
