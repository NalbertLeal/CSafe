Terminals unused in grammar

   STRING_VALUE
   VARIABLE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | STATEMENTS

    3 STATEMENTS: STATEMENT
    4           | STATEMENT STATEMENTS

    5 STATEMENT: ASSIGNMENT END
    6          | FOR_STATEMENT
    7          | IF_STATEMENT
    8          | WHILE_STATEMENT
    9          | FUNCTION
   10          | FUNCTION_CALL
   11          | SWITCH_STM
   12          | RETURN_STM
   13          | BLOCK

   14 TYPE: INT_TYPE
   15     | FLOAT_TYPE
   16     | BOOLEAN_TYPE
   17     | CHAR_TYPE
   18     | STRING_TYPE
   19     | ID

   20 LOGICAL_OP: AND
   21           | OR
   22           | BITWISE_AND
   23           | BITWISE_OR
   24           | LESS_THAN
   25           | GREATER_THAN
   26           | EQUALS_THAN

   27 ARITHMETIC_OP: PLUS
   28              | MINUS
   29              | TIMES
   30              | DIVIDE
   31              | POW
   32              | MOD

   33 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK

   34 RETURN_STM: RETURN TERM END

   35 TERM_LIST: TERM
   36          | TERM COMMA TERM_LIST

   37 ID_PARAMS: TYPE ID
   38          | TYPE ID COMMA ID_PARAMS

   39 FUNCTION_PARAMS: %empty
   40                | ID_PARAMS

   41 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END

   42 OPERATOR: ARITHMETIC_OP
   43         | LOGICAL_OP

   44 UNARY_OPERATOR: UNARY_PLUS
   45               | UNARY_MINUS

   46 TERM: VARIABLES
   47     | INTEGER_LITERAL
   48     | FLOAT_LITERAL
   49     | BOOLEAN_LITERAL

   50 EXPRESSION: TERM
   51           | TERM OPERATOR EXPRESSION
   52           | LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS

   53 UNARY_EXPR: TERM UNARY_OPERATOR
   54           | UNARY_OPERATOR TERM

   55 VARIABLES: ID

   56 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   57 ASSIGNMENT: VARIABLES EQUALS EXPRESSION
   58           | TYPE VARIABLES EQUALS EXPRESSION
   59           | UNARY_EXPR

   60 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

   61 ELSE_STATEMENT: ELSE STATEMENT
   62               | %empty

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   64 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

   66 CASE_STATEMENT: CASE TERM COLON STATEMENTS
   67               | CASE TERM COLON STATEMENTS BREAK END

   68 CASE_LIST: CASE_STATEMENT
   69          | CASE_STATEMENT CASE_LIST

   70 DEFAULT_STM: DEFAULT COLON STATEMENTS


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 47
FLOAT_LITERAL (259) 48
BOOLEAN_LITERAL (260) 49
STRING_VALUE (261)
COMMA (262) 36 38
COLON (263) 66 67 70
INT_TYPE (264) 14
FLOAT_TYPE (265) 15
BOOLEAN_TYPE (266) 16
CHAR_TYPE (267) 17
STRING_TYPE (268) 18
PLUS (269) 27
MINUS (270) 28
TIMES (271) 29
DIVIDE (272) 30
UNARY_MINUS (273) 45
UNARY_PLUS (274) 44
ID (275) 19 33 37 38 41 55 65
AND (276) 20
OR (277) 21
END (278) 5 34 41 63 67
EQUALS (279) 57 58
MOD (280) 32
POW (281) 31
VARIABLE (282)
BITWISE_AND (283) 22
BITWISE_OR (284) 23
LESS_THAN (285) 24
GREATER_THAN (286) 25
EQUALS_THAN (287) 26
LEFT_PARENTHESIS (288) 33 41 52 60 63 64 65
RIGHT_PARENTHESIS (289) 33 41 52 60 63 64 65
LEFT_BRACKET (290) 56 63 65
RIGHT_BRACKET (291) 56 63 65
IF (292) 60
ELSE (293) 61
FOR (294) 63
WHILE (295) 64
RETURN (296) 34
SWITCH (297) 65
CASE (298) 66 67
DEFAULT (299) 70
BREAK (300) 67


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1 2, on right: 0
STATEMENTS (48)
    on left: 3 4, on right: 2 4 56 63 66 67 70
STATEMENT (49)
    on left: 5 6 7 8 9 10 11 12 13, on right: 3 4 61
TYPE (50)
    on left: 14 15 16 17 18 19, on right: 33 37 38 58
LOGICAL_OP (51)
    on left: 20 21 22 23 24 25 26, on right: 43
ARITHMETIC_OP (52)
    on left: 27 28 29 30 31 32, on right: 42
FUNCTION (53)
    on left: 33, on right: 9
RETURN_STM (54)
    on left: 34, on right: 12
TERM_LIST (55)
    on left: 35 36, on right: 36 41
ID_PARAMS (56)
    on left: 37 38, on right: 38 40
FUNCTION_PARAMS (57)
    on left: 39 40, on right: 33
FUNCTION_CALL (58)
    on left: 41, on right: 10
OPERATOR (59)
    on left: 42 43, on right: 51
UNARY_OPERATOR (60)
    on left: 44 45, on right: 53 54
TERM (61)
    on left: 46 47 48 49, on right: 34 35 36 50 51 53 54 66 67
EXPRESSION (62)
    on left: 50 51 52, on right: 51 52 57 58 60 63 64
UNARY_EXPR (63)
    on left: 53 54, on right: 59
VARIABLES (64)
    on left: 55, on right: 46 57 58
BLOCK (65)
    on left: 56, on right: 13 33 60 64
ASSIGNMENT (66)
    on left: 57 58 59, on right: 5 63
IF_STATEMENT (67)
    on left: 60, on right: 7
ELSE_STATEMENT (68)
    on left: 61 62, on right: 60
FOR_STATEMENT (69)
    on left: 63, on right: 6
WHILE_STATEMENT (70)
    on left: 64, on right: 8
SWITCH_STM (71)
    on left: 65, on right: 11
CASE_STATEMENT (72)
    on left: 66 67, on right: 68 69
CASE_LIST (73)
    on left: 68 69, on right: 65 69
DEFAULT_STM (74)
    on left: 70, on right: 65


State 0

    0 $accept: . program $end

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    RETURN           shift, and go to state 16
    SWITCH           shift, and go to state 17

    $default  reduce using rule 1 (program)

    program          go to state 18
    STATEMENTS       go to state 19
    STATEMENT        go to state 20
    TYPE             go to state 21
    FUNCTION         go to state 22
    RETURN_STM       go to state 23
    FUNCTION_CALL    go to state 24
    UNARY_OPERATOR   go to state 25
    TERM             go to state 26
    UNARY_EXPR       go to state 27
    VARIABLES        go to state 28
    BLOCK            go to state 29
    ASSIGNMENT       go to state 30
    IF_STATEMENT     go to state 31
    FOR_STATEMENT    go to state 32
    WHILE_STATEMENT  go to state 33
    SWITCH_STM       go to state 34


State 1

   47 TERM: INTEGER_LITERAL .

    $default  reduce using rule 47 (TERM)


State 2

   48 TERM: FLOAT_LITERAL .

    $default  reduce using rule 48 (TERM)


State 3

   49 TERM: BOOLEAN_LITERAL .

    $default  reduce using rule 49 (TERM)


State 4

   14 TYPE: INT_TYPE .

    $default  reduce using rule 14 (TYPE)


State 5

   15 TYPE: FLOAT_TYPE .

    $default  reduce using rule 15 (TYPE)


State 6

   16 TYPE: BOOLEAN_TYPE .

    $default  reduce using rule 16 (TYPE)


State 7

   17 TYPE: CHAR_TYPE .

    $default  reduce using rule 17 (TYPE)


State 8

   18 TYPE: STRING_TYPE .

    $default  reduce using rule 18 (TYPE)


State 9

   45 UNARY_OPERATOR: UNARY_MINUS .

    $default  reduce using rule 45 (UNARY_OPERATOR)


State 10

   44 UNARY_OPERATOR: UNARY_PLUS .

    $default  reduce using rule 44 (UNARY_OPERATOR)


State 11

   19 TYPE: ID .
   41 FUNCTION_CALL: ID . LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END
   55 VARIABLES: ID .

    LEFT_PARENTHESIS  shift, and go to state 35

    ID        reduce using rule 19 (TYPE)
    $default  reduce using rule 55 (VARIABLES)


State 12

   56 BLOCK: LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    RETURN           shift, and go to state 16
    SWITCH           shift, and go to state 17

    STATEMENTS       go to state 36
    STATEMENT        go to state 20
    TYPE             go to state 21
    FUNCTION         go to state 22
    RETURN_STM       go to state 23
    FUNCTION_CALL    go to state 24
    UNARY_OPERATOR   go to state 25
    TERM             go to state 26
    UNARY_EXPR       go to state 27
    VARIABLES        go to state 28
    BLOCK            go to state 29
    ASSIGNMENT       go to state 30
    IF_STATEMENT     go to state 31
    FOR_STATEMENT    go to state 32
    WHILE_STATEMENT  go to state 33
    SWITCH_STM       go to state 34


State 13

   60 IF_STATEMENT: IF . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    LEFT_PARENTHESIS  shift, and go to state 37


State 14

   63 FOR_STATEMENT: FOR . LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 38


State 15

   64 WHILE_STATEMENT: WHILE . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK

    LEFT_PARENTHESIS  shift, and go to state 39


State 16

   34 RETURN_STM: RETURN . TERM END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM       go to state 41
    VARIABLES  go to state 42


State 17

   65 SWITCH_STM: SWITCH . LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 43


State 18

    0 $accept: program . $end

    $end  shift, and go to state 44


State 19

    2 program: STATEMENTS .

    $default  reduce using rule 2 (program)


State 20

    3 STATEMENTS: STATEMENT .
    4           | STATEMENT . STATEMENTS

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    RETURN           shift, and go to state 16
    SWITCH           shift, and go to state 17

    $default  reduce using rule 3 (STATEMENTS)

    STATEMENTS       go to state 45
    STATEMENT        go to state 20
    TYPE             go to state 21
    FUNCTION         go to state 22
    RETURN_STM       go to state 23
    FUNCTION_CALL    go to state 24
    UNARY_OPERATOR   go to state 25
    TERM             go to state 26
    UNARY_EXPR       go to state 27
    VARIABLES        go to state 28
    BLOCK            go to state 29
    ASSIGNMENT       go to state 30
    IF_STATEMENT     go to state 31
    FOR_STATEMENT    go to state 32
    WHILE_STATEMENT  go to state 33
    SWITCH_STM       go to state 34


State 21

   33 FUNCTION: TYPE . ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK
   58 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 46

    VARIABLES  go to state 47


State 22

    9 STATEMENT: FUNCTION .

    $default  reduce using rule 9 (STATEMENT)


State 23

   12 STATEMENT: RETURN_STM .

    $default  reduce using rule 12 (STATEMENT)


State 24

   10 STATEMENT: FUNCTION_CALL .

    $default  reduce using rule 10 (STATEMENT)


State 25

   54 UNARY_EXPR: UNARY_OPERATOR . TERM

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM       go to state 48
    VARIABLES  go to state 42


State 26

   53 UNARY_EXPR: TERM . UNARY_OPERATOR

    UNARY_MINUS  shift, and go to state 9
    UNARY_PLUS   shift, and go to state 10

    UNARY_OPERATOR  go to state 49


State 27

   59 ASSIGNMENT: UNARY_EXPR .

    $default  reduce using rule 59 (ASSIGNMENT)


State 28

   46 TERM: VARIABLES .
   57 ASSIGNMENT: VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 50

    $default  reduce using rule 46 (TERM)


State 29

   13 STATEMENT: BLOCK .

    $default  reduce using rule 13 (STATEMENT)


State 30

    5 STATEMENT: ASSIGNMENT . END

    END  shift, and go to state 51


State 31

    7 STATEMENT: IF_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


State 32

    6 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


State 33

    8 STATEMENT: WHILE_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


State 34

   11 STATEMENT: SWITCH_STM .

    $default  reduce using rule 11 (STATEMENT)


State 35

   41 FUNCTION_CALL: ID LEFT_PARENTHESIS . TERM_LIST RIGHT_PARENTHESIS END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM_LIST  go to state 52
    TERM       go to state 53
    VARIABLES  go to state 42


State 36

   56 BLOCK: LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 54


State 37

   60 IF_STATEMENT: IF LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 55

    TERM        go to state 56
    EXPRESSION  go to state 57
    VARIABLES   go to state 42


State 38

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS . ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 58

    TYPE            go to state 59
    UNARY_OPERATOR  go to state 25
    TERM            go to state 26
    UNARY_EXPR      go to state 27
    VARIABLES       go to state 28
    ASSIGNMENT      go to state 60


State 39

   64 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 55

    TERM        go to state 56
    EXPRESSION  go to state 61
    VARIABLES   go to state 42


State 40

   55 VARIABLES: ID .

    $default  reduce using rule 55 (VARIABLES)


State 41

   34 RETURN_STM: RETURN TERM . END

    END  shift, and go to state 62


State 42

   46 TERM: VARIABLES .

    $default  reduce using rule 46 (TERM)


State 43

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS . ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    ID  shift, and go to state 63


State 44

    0 $accept: program $end .

    $default  accept


State 45

    4 STATEMENTS: STATEMENT STATEMENTS .

    $default  reduce using rule 4 (STATEMENTS)


State 46

   33 FUNCTION: TYPE ID . LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK
   55 VARIABLES: ID .

    LEFT_PARENTHESIS  shift, and go to state 64

    $default  reduce using rule 55 (VARIABLES)


State 47

   58 ASSIGNMENT: TYPE VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 65


State 48

   54 UNARY_EXPR: UNARY_OPERATOR TERM .

    $default  reduce using rule 54 (UNARY_EXPR)


State 49

   53 UNARY_EXPR: TERM UNARY_OPERATOR .

    $default  reduce using rule 53 (UNARY_EXPR)


State 50

   57 ASSIGNMENT: VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 55

    TERM        go to state 56
    EXPRESSION  go to state 66
    VARIABLES   go to state 42


State 51

    5 STATEMENT: ASSIGNMENT END .

    $default  reduce using rule 5 (STATEMENT)


State 52

   41 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST . RIGHT_PARENTHESIS END

    RIGHT_PARENTHESIS  shift, and go to state 67


State 53

   35 TERM_LIST: TERM .
   36          | TERM . COMMA TERM_LIST

    COMMA  shift, and go to state 68

    $default  reduce using rule 35 (TERM_LIST)


State 54

   56 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 56 (BLOCK)


State 55

   52 EXPRESSION: LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 55

    TERM        go to state 56
    EXPRESSION  go to state 69
    VARIABLES   go to state 42


State 56

   50 EXPRESSION: TERM .
   51           | TERM . OPERATOR EXPRESSION

    PLUS          shift, and go to state 70
    MINUS         shift, and go to state 71
    TIMES         shift, and go to state 72
    DIVIDE        shift, and go to state 73
    AND           shift, and go to state 74
    OR            shift, and go to state 75
    MOD           shift, and go to state 76
    POW           shift, and go to state 77
    BITWISE_AND   shift, and go to state 78
    BITWISE_OR    shift, and go to state 79
    LESS_THAN     shift, and go to state 80
    GREATER_THAN  shift, and go to state 81
    EQUALS_THAN   shift, and go to state 82

    $default  reduce using rule 50 (EXPRESSION)

    LOGICAL_OP     go to state 83
    ARITHMETIC_OP  go to state 84
    OPERATOR       go to state 85


State 57

   60 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    RIGHT_PARENTHESIS  shift, and go to state 86


State 58

   19 TYPE: ID .
   55 VARIABLES: ID .

    ID        reduce using rule 19 (TYPE)
    $default  reduce using rule 55 (VARIABLES)


State 59

   58 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 40

    VARIABLES  go to state 47


State 60

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT . END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 87


State 61

   64 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK

    RIGHT_PARENTHESIS  shift, and go to state 88


State 62

   34 RETURN_STM: RETURN TERM END .

    $default  reduce using rule 34 (RETURN_STM)


State 63

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID . RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 89


State 64

   33 FUNCTION: TYPE ID LEFT_PARENTHESIS . FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK

    INT_TYPE      shift, and go to state 4
    FLOAT_TYPE    shift, and go to state 5
    BOOLEAN_TYPE  shift, and go to state 6
    CHAR_TYPE     shift, and go to state 7
    STRING_TYPE   shift, and go to state 8
    ID            shift, and go to state 90

    $default  reduce using rule 39 (FUNCTION_PARAMS)

    TYPE             go to state 91
    ID_PARAMS        go to state 92
    FUNCTION_PARAMS  go to state 93


State 65

   58 ASSIGNMENT: TYPE VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 55

    TERM        go to state 56
    EXPRESSION  go to state 94
    VARIABLES   go to state 42


State 66

   57 ASSIGNMENT: VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 57 (ASSIGNMENT)


State 67

   41 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS . END

    END  shift, and go to state 95


State 68

   36 TERM_LIST: TERM COMMA . TERM_LIST

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM_LIST  go to state 96
    TERM       go to state 53
    VARIABLES  go to state 42


State 69

   52 EXPRESSION: LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 97


State 70

   27 ARITHMETIC_OP: PLUS .

    $default  reduce using rule 27 (ARITHMETIC_OP)


State 71

   28 ARITHMETIC_OP: MINUS .

    $default  reduce using rule 28 (ARITHMETIC_OP)


State 72

   29 ARITHMETIC_OP: TIMES .

    $default  reduce using rule 29 (ARITHMETIC_OP)


State 73

   30 ARITHMETIC_OP: DIVIDE .

    $default  reduce using rule 30 (ARITHMETIC_OP)


State 74

   20 LOGICAL_OP: AND .

    $default  reduce using rule 20 (LOGICAL_OP)


State 75

   21 LOGICAL_OP: OR .

    $default  reduce using rule 21 (LOGICAL_OP)


State 76

   32 ARITHMETIC_OP: MOD .

    $default  reduce using rule 32 (ARITHMETIC_OP)


State 77

   31 ARITHMETIC_OP: POW .

    $default  reduce using rule 31 (ARITHMETIC_OP)


State 78

   22 LOGICAL_OP: BITWISE_AND .

    $default  reduce using rule 22 (LOGICAL_OP)


State 79

   23 LOGICAL_OP: BITWISE_OR .

    $default  reduce using rule 23 (LOGICAL_OP)


State 80

   24 LOGICAL_OP: LESS_THAN .

    $default  reduce using rule 24 (LOGICAL_OP)


State 81

   25 LOGICAL_OP: GREATER_THAN .

    $default  reduce using rule 25 (LOGICAL_OP)


State 82

   26 LOGICAL_OP: EQUALS_THAN .

    $default  reduce using rule 26 (LOGICAL_OP)


State 83

   43 OPERATOR: LOGICAL_OP .

    $default  reduce using rule 43 (OPERATOR)


State 84

   42 OPERATOR: ARITHMETIC_OP .

    $default  reduce using rule 42 (OPERATOR)


State 85

   51 EXPRESSION: TERM OPERATOR . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 55

    TERM        go to state 56
    EXPRESSION  go to state 98
    VARIABLES   go to state 42


State 86

   60 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK ELSE_STATEMENT

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 99


State 87

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END . EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL   shift, and go to state 1
    FLOAT_LITERAL     shift, and go to state 2
    BOOLEAN_LITERAL   shift, and go to state 3
    ID                shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 55

    TERM        go to state 56
    EXPRESSION  go to state 100
    VARIABLES   go to state 42


State 88

   64 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 101


State 89

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS . LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 102


State 90

   19 TYPE: ID .

    $default  reduce using rule 19 (TYPE)


State 91

   37 ID_PARAMS: TYPE . ID
   38          | TYPE . ID COMMA ID_PARAMS

    ID  shift, and go to state 103


State 92

   40 FUNCTION_PARAMS: ID_PARAMS .

    $default  reduce using rule 40 (FUNCTION_PARAMS)


State 93

   33 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS . RIGHT_PARENTHESIS BLOCK

    RIGHT_PARENTHESIS  shift, and go to state 104


State 94

   58 ASSIGNMENT: TYPE VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 58 (ASSIGNMENT)


State 95

   41 FUNCTION_CALL: ID LEFT_PARENTHESIS TERM_LIST RIGHT_PARENTHESIS END .

    $default  reduce using rule 41 (FUNCTION_CALL)


State 96

   36 TERM_LIST: TERM COMMA TERM_LIST .

    $default  reduce using rule 36 (TERM_LIST)


State 97

   52 EXPRESSION: LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (EXPRESSION)


State 98

   51 EXPRESSION: TERM OPERATOR EXPRESSION .

    $default  reduce using rule 51 (EXPRESSION)


State 99

   60 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK . ELSE_STATEMENT

    ELSE  shift, and go to state 105

    $default  reduce using rule 62 (ELSE_STATEMENT)

    ELSE_STATEMENT  go to state 106


State 100

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION . END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 107


State 101

   64 WHILE_STATEMENT: WHILE LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK .

    $default  reduce using rule 64 (WHILE_STATEMENT)


State 102

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET . CASE_LIST DEFAULT_STM RIGHT_BRACKET

    CASE  shift, and go to state 108

    CASE_STATEMENT  go to state 109
    CASE_LIST       go to state 110


State 103

   37 ID_PARAMS: TYPE ID .
   38          | TYPE ID . COMMA ID_PARAMS

    COMMA  shift, and go to state 111

    $default  reduce using rule 37 (ID_PARAMS)


State 104

   33 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS . BLOCK

    LEFT_BRACKET  shift, and go to state 12

    BLOCK  go to state 112


State 105

   61 ELSE_STATEMENT: ELSE . STATEMENT

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    RETURN           shift, and go to state 16
    SWITCH           shift, and go to state 17

    STATEMENT        go to state 113
    TYPE             go to state 21
    FUNCTION         go to state 22
    RETURN_STM       go to state 23
    FUNCTION_CALL    go to state 24
    UNARY_OPERATOR   go to state 25
    TERM             go to state 26
    UNARY_EXPR       go to state 27
    VARIABLES        go to state 28
    BLOCK            go to state 29
    ASSIGNMENT       go to state 30
    IF_STATEMENT     go to state 31
    FOR_STATEMENT    go to state 32
    WHILE_STATEMENT  go to state 33
    SWITCH_STM       go to state 34


State 106

   60 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT .

    $default  reduce using rule 60 (IF_STATEMENT)


State 107

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END . ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 58

    TYPE            go to state 59
    UNARY_OPERATOR  go to state 25
    TERM            go to state 26
    UNARY_EXPR      go to state 27
    VARIABLES       go to state 28
    ASSIGNMENT      go to state 114


State 108

   66 CASE_STATEMENT: CASE . TERM COLON STATEMENTS
   67               | CASE . TERM COLON STATEMENTS BREAK END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    ID               shift, and go to state 40

    TERM       go to state 115
    VARIABLES  go to state 42


State 109

   68 CASE_LIST: CASE_STATEMENT .
   69          | CASE_STATEMENT . CASE_LIST

    CASE  shift, and go to state 108

    $default  reduce using rule 68 (CASE_LIST)

    CASE_STATEMENT  go to state 109
    CASE_LIST       go to state 116


State 110

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST . DEFAULT_STM RIGHT_BRACKET

    DEFAULT  shift, and go to state 117

    DEFAULT_STM  go to state 118


State 111

   38 ID_PARAMS: TYPE ID COMMA . ID_PARAMS

    INT_TYPE      shift, and go to state 4
    FLOAT_TYPE    shift, and go to state 5
    BOOLEAN_TYPE  shift, and go to state 6
    CHAR_TYPE     shift, and go to state 7
    STRING_TYPE   shift, and go to state 8
    ID            shift, and go to state 90

    TYPE       go to state 91
    ID_PARAMS  go to state 119


State 112

   33 FUNCTION: TYPE ID LEFT_PARENTHESIS FUNCTION_PARAMS RIGHT_PARENTHESIS BLOCK .

    $default  reduce using rule 33 (FUNCTION)


State 113

   61 ELSE_STATEMENT: ELSE STATEMENT .

    $default  reduce using rule 61 (ELSE_STATEMENT)


State 114

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT . RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 120


State 115

   66 CASE_STATEMENT: CASE TERM . COLON STATEMENTS
   67               | CASE TERM . COLON STATEMENTS BREAK END

    COLON  shift, and go to state 121


State 116

   69 CASE_LIST: CASE_STATEMENT CASE_LIST .

    $default  reduce using rule 69 (CASE_LIST)


State 117

   70 DEFAULT_STM: DEFAULT . COLON STATEMENTS

    COLON  shift, and go to state 122


State 118

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 123


State 119

   38 ID_PARAMS: TYPE ID COMMA ID_PARAMS .

    $default  reduce using rule 38 (ID_PARAMS)


State 120

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS . LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 124


State 121

   66 CASE_STATEMENT: CASE TERM COLON . STATEMENTS
   67               | CASE TERM COLON . STATEMENTS BREAK END

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    RETURN           shift, and go to state 16
    SWITCH           shift, and go to state 17

    STATEMENTS       go to state 125
    STATEMENT        go to state 20
    TYPE             go to state 21
    FUNCTION         go to state 22
    RETURN_STM       go to state 23
    FUNCTION_CALL    go to state 24
    UNARY_OPERATOR   go to state 25
    TERM             go to state 26
    UNARY_EXPR       go to state 27
    VARIABLES        go to state 28
    BLOCK            go to state 29
    ASSIGNMENT       go to state 30
    IF_STATEMENT     go to state 31
    FOR_STATEMENT    go to state 32
    WHILE_STATEMENT  go to state 33
    SWITCH_STM       go to state 34


State 122

   70 DEFAULT_STM: DEFAULT COLON . STATEMENTS

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    RETURN           shift, and go to state 16
    SWITCH           shift, and go to state 17

    STATEMENTS       go to state 126
    STATEMENT        go to state 20
    TYPE             go to state 21
    FUNCTION         go to state 22
    RETURN_STM       go to state 23
    FUNCTION_CALL    go to state 24
    UNARY_OPERATOR   go to state 25
    TERM             go to state 26
    UNARY_EXPR       go to state 27
    VARIABLES        go to state 28
    BLOCK            go to state 29
    ASSIGNMENT       go to state 30
    IF_STATEMENT     go to state 31
    FOR_STATEMENT    go to state 32
    WHILE_STATEMENT  go to state 33
    SWITCH_STM       go to state 34


State 123

   65 SWITCH_STM: SWITCH LEFT_PARENTHESIS ID RIGHT_PARENTHESIS LEFT_BRACKET CASE_LIST DEFAULT_STM RIGHT_BRACKET .

    $default  reduce using rule 65 (SWITCH_STM)


State 124

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL  shift, and go to state 1
    FLOAT_LITERAL    shift, and go to state 2
    BOOLEAN_LITERAL  shift, and go to state 3
    INT_TYPE         shift, and go to state 4
    FLOAT_TYPE       shift, and go to state 5
    BOOLEAN_TYPE     shift, and go to state 6
    CHAR_TYPE        shift, and go to state 7
    STRING_TYPE      shift, and go to state 8
    UNARY_MINUS      shift, and go to state 9
    UNARY_PLUS       shift, and go to state 10
    ID               shift, and go to state 11
    LEFT_BRACKET     shift, and go to state 12
    IF               shift, and go to state 13
    FOR              shift, and go to state 14
    WHILE            shift, and go to state 15
    RETURN           shift, and go to state 16
    SWITCH           shift, and go to state 17

    STATEMENTS       go to state 127
    STATEMENT        go to state 20
    TYPE             go to state 21
    FUNCTION         go to state 22
    RETURN_STM       go to state 23
    FUNCTION_CALL    go to state 24
    UNARY_OPERATOR   go to state 25
    TERM             go to state 26
    UNARY_EXPR       go to state 27
    VARIABLES        go to state 28
    BLOCK            go to state 29
    ASSIGNMENT       go to state 30
    IF_STATEMENT     go to state 31
    FOR_STATEMENT    go to state 32
    WHILE_STATEMENT  go to state 33
    SWITCH_STM       go to state 34


State 125

   66 CASE_STATEMENT: CASE TERM COLON STATEMENTS .
   67               | CASE TERM COLON STATEMENTS . BREAK END

    BREAK  shift, and go to state 128

    $default  reduce using rule 66 (CASE_STATEMENT)


State 126

   70 DEFAULT_STM: DEFAULT COLON STATEMENTS .

    $default  reduce using rule 70 (DEFAULT_STM)


State 127

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 129


State 128

   67 CASE_STATEMENT: CASE TERM COLON STATEMENTS BREAK . END

    END  shift, and go to state 130


State 129

   63 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 63 (FOR_STATEMENT)


State 130

   67 CASE_STATEMENT: CASE TERM COLON STATEMENTS BREAK END .

    $default  reduce using rule 67 (CASE_STATEMENT)
