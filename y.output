Useless nonterminals

   LITERAL


Terminals which are not used

   BOOLEAN_LITERAL
   COMMA
   VARIABLE


Useless rules

   44 LITERAL: INTEGER_LITERAL
   45        | FLOAT_LITERAL
   46        | BOOLEAN_LITERAL


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | STATEMENTS

    3 STATEMENTS: STATEMENT
    4           | STATEMENT STATEMENTS

    5 STATEMENT: ASSIGNMENT END
    6          | FOR_STATEMENT
    7          | IF_STATEMENT
    8          | BLOCK

    9 TYPE: INT_TYPE
   10     | FLOAT_TYPE
   11     | BOOLEAN_TYPE
   12     | CHAR_TYPE
   13     | STRING_TYPE
   14     | ID

   15 LOGICAL_OP: AND
   16           | OR
   17           | BITWISE_AND
   18           | BITWISE_OR
   19           | LESS_THAN
   20           | GREATER_THAN
   21           | EQUALS_THAN

   22 ARITHMETIC_OP: PLUS
   23              | MINUS
   24              | TIMES
   25              | DIVIDE
   26              | POW
   27              | MOD

   28 OPERATOR: ARITHMETIC_OP
   29         | LOGICAL_OP

   30 TERM: VARIABLES
   31     | INTEGER_LITERAL
   32     | FLOAT_LITERAL

   33 EXPRESSION: TERM
   34           | TERM OPERATOR EXPRESSION
   35           | LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS

   36 VARIABLES: ID

   37 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET

   38 ASSIGNMENT: VARIABLES EQUALS EXPRESSION
   39           | TYPE VARIABLES EQUALS EXPRESSION

   40 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

   41 ELSE_STATEMENT: ELSE STATEMENT
   42               | /* empty */

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 31
FLOAT_LITERAL (259) 32
BOOLEAN_LITERAL (260)
COMMA (261)
INT_TYPE (262) 9
FLOAT_TYPE (263) 10
BOOLEAN_TYPE (264) 11
CHAR_TYPE (265) 12
STRING_TYPE (266) 13
PLUS (267) 22
MINUS (268) 23
TIMES (269) 24
DIVIDE (270) 25
ID (271) 14 36
AND (272) 15
OR (273) 16
END (274) 5 43
EQUALS (275) 38 39
MOD (276) 27
POW (277) 26
VARIABLE (278)
BITWISE_AND (279) 17
BITWISE_OR (280) 18
LESS_THAN (281) 19
GREATER_THAN (282) 20
EQUALS_THAN (283) 21
LEFT_PARENTHESIS (284) 35 40 43
RIGHT_PARENTHESIS (285) 35 40 43
LEFT_BRACKET (286) 37 43
RIGHT_BRACKET (287) 37 43
IF (288) 40
ELSE (289) 41
FOR (290) 43


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1 2, on right: 0
STATEMENTS (38)
    on left: 3 4, on right: 2 4 37 43
STATEMENT (39)
    on left: 5 6 7 8, on right: 3 4 41
TYPE (40)
    on left: 9 10 11 12 13 14, on right: 39
LOGICAL_OP (41)
    on left: 15 16 17 18 19 20 21, on right: 29
ARITHMETIC_OP (42)
    on left: 22 23 24 25 26 27, on right: 28
OPERATOR (43)
    on left: 28 29, on right: 34
TERM (44)
    on left: 30 31 32, on right: 33 34
EXPRESSION (45)
    on left: 33 34 35, on right: 34 35 38 39 40 43
VARIABLES (46)
    on left: 36, on right: 30 38 39
BLOCK (47)
    on left: 37, on right: 8 40
ASSIGNMENT (48)
    on left: 38 39, on right: 5 43
IF_STATEMENT (49)
    on left: 40, on right: 7
ELSE_STATEMENT (50)
    on left: 41 42, on right: 40
FOR_STATEMENT (51)
    on left: 43, on right: 6


state 0

    0 $accept: . program $end

    INT_TYPE      shift, and go to state 1
    FLOAT_TYPE    shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    CHAR_TYPE     shift, and go to state 4
    STRING_TYPE   shift, and go to state 5
    ID            shift, and go to state 6
    LEFT_BRACKET  shift, and go to state 7
    IF            shift, and go to state 8
    FOR           shift, and go to state 9

    $default  reduce using rule 1 (program)

    program        go to state 10
    STATEMENTS     go to state 11
    STATEMENT      go to state 12
    TYPE           go to state 13
    VARIABLES      go to state 14
    BLOCK          go to state 15
    ASSIGNMENT     go to state 16
    IF_STATEMENT   go to state 17
    FOR_STATEMENT  go to state 18


state 1

    9 TYPE: INT_TYPE .

    $default  reduce using rule 9 (TYPE)


state 2

   10 TYPE: FLOAT_TYPE .

    $default  reduce using rule 10 (TYPE)


state 3

   11 TYPE: BOOLEAN_TYPE .

    $default  reduce using rule 11 (TYPE)


state 4

   12 TYPE: CHAR_TYPE .

    $default  reduce using rule 12 (TYPE)


state 5

   13 TYPE: STRING_TYPE .

    $default  reduce using rule 13 (TYPE)


state 6

   14 TYPE: ID .
   36 VARIABLES: ID .

    EQUALS    reduce using rule 36 (VARIABLES)
    $default  reduce using rule 14 (TYPE)


state 7

   37 BLOCK: LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INT_TYPE      shift, and go to state 1
    FLOAT_TYPE    shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    CHAR_TYPE     shift, and go to state 4
    STRING_TYPE   shift, and go to state 5
    ID            shift, and go to state 6
    LEFT_BRACKET  shift, and go to state 7
    IF            shift, and go to state 8
    FOR           shift, and go to state 9

    STATEMENTS     go to state 19
    STATEMENT      go to state 12
    TYPE           go to state 13
    VARIABLES      go to state 14
    BLOCK          go to state 15
    ASSIGNMENT     go to state 16
    IF_STATEMENT   go to state 17
    FOR_STATEMENT  go to state 18


state 8

   40 IF_STATEMENT: IF . LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    LEFT_PARENTHESIS  shift, and go to state 20


state 9

   43 FOR_STATEMENT: FOR . LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_PARENTHESIS  shift, and go to state 21


state 10

    0 $accept: program . $end

    $end  shift, and go to state 22


state 11

    2 program: STATEMENTS .

    $default  reduce using rule 2 (program)


state 12

    3 STATEMENTS: STATEMENT .
    4           | STATEMENT . STATEMENTS

    INT_TYPE      shift, and go to state 1
    FLOAT_TYPE    shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    CHAR_TYPE     shift, and go to state 4
    STRING_TYPE   shift, and go to state 5
    ID            shift, and go to state 6
    LEFT_BRACKET  shift, and go to state 7
    IF            shift, and go to state 8
    FOR           shift, and go to state 9

    $default  reduce using rule 3 (STATEMENTS)

    STATEMENTS     go to state 23
    STATEMENT      go to state 12
    TYPE           go to state 13
    VARIABLES      go to state 14
    BLOCK          go to state 15
    ASSIGNMENT     go to state 16
    IF_STATEMENT   go to state 17
    FOR_STATEMENT  go to state 18


state 13

   39 ASSIGNMENT: TYPE . VARIABLES EQUALS EXPRESSION

    ID  shift, and go to state 24

    VARIABLES  go to state 25


state 14

   38 ASSIGNMENT: VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 26


state 15

    8 STATEMENT: BLOCK .

    $default  reduce using rule 8 (STATEMENT)


state 16

    5 STATEMENT: ASSIGNMENT . END

    END  shift, and go to state 27


state 17

    7 STATEMENT: IF_STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


state 18

    6 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


state 19

   37 BLOCK: LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 28


state 20

   40 IF_STATEMENT: IF LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    INTEGER_LITERAL   shift, and go to state 29
    FLOAT_LITERAL     shift, and go to state 30
    ID                shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 31

    TERM        go to state 32
    EXPRESSION  go to state 33
    VARIABLES   go to state 34


state 21

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS . ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INT_TYPE      shift, and go to state 1
    FLOAT_TYPE    shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    CHAR_TYPE     shift, and go to state 4
    STRING_TYPE   shift, and go to state 5
    ID            shift, and go to state 6

    TYPE        go to state 13
    VARIABLES   go to state 14
    ASSIGNMENT  go to state 35


state 22

    0 $accept: program $end .

    $default  accept


state 23

    4 STATEMENTS: STATEMENT STATEMENTS .

    $default  reduce using rule 4 (STATEMENTS)


state 24

   36 VARIABLES: ID .

    $default  reduce using rule 36 (VARIABLES)


state 25

   39 ASSIGNMENT: TYPE VARIABLES . EQUALS EXPRESSION

    EQUALS  shift, and go to state 36


state 26

   38 ASSIGNMENT: VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 29
    FLOAT_LITERAL     shift, and go to state 30
    ID                shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 31

    TERM        go to state 32
    EXPRESSION  go to state 37
    VARIABLES   go to state 34


state 27

    5 STATEMENT: ASSIGNMENT END .

    $default  reduce using rule 5 (STATEMENT)


state 28

   37 BLOCK: LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 37 (BLOCK)


state 29

   31 TERM: INTEGER_LITERAL .

    $default  reduce using rule 31 (TERM)


state 30

   32 TERM: FLOAT_LITERAL .

    $default  reduce using rule 32 (TERM)


state 31

   35 EXPRESSION: LEFT_PARENTHESIS . EXPRESSION RIGHT_PARENTHESIS

    INTEGER_LITERAL   shift, and go to state 29
    FLOAT_LITERAL     shift, and go to state 30
    ID                shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 31

    TERM        go to state 32
    EXPRESSION  go to state 38
    VARIABLES   go to state 34


state 32

   33 EXPRESSION: TERM .
   34           | TERM . OPERATOR EXPRESSION

    PLUS          shift, and go to state 39
    MINUS         shift, and go to state 40
    TIMES         shift, and go to state 41
    DIVIDE        shift, and go to state 42
    AND           shift, and go to state 43
    OR            shift, and go to state 44
    MOD           shift, and go to state 45
    POW           shift, and go to state 46
    BITWISE_AND   shift, and go to state 47
    BITWISE_OR    shift, and go to state 48
    LESS_THAN     shift, and go to state 49
    GREATER_THAN  shift, and go to state 50
    EQUALS_THAN   shift, and go to state 51

    $default  reduce using rule 33 (EXPRESSION)

    LOGICAL_OP     go to state 52
    ARITHMETIC_OP  go to state 53
    OPERATOR       go to state 54


state 33

   40 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT

    RIGHT_PARENTHESIS  shift, and go to state 55


state 34

   30 TERM: VARIABLES .

    $default  reduce using rule 30 (TERM)


state 35

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT . END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 56


state 36

   39 ASSIGNMENT: TYPE VARIABLES EQUALS . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 29
    FLOAT_LITERAL     shift, and go to state 30
    ID                shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 31

    TERM        go to state 32
    EXPRESSION  go to state 57
    VARIABLES   go to state 34


state 37

   38 ASSIGNMENT: VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 38 (ASSIGNMENT)


state 38

   35 EXPRESSION: LEFT_PARENTHESIS EXPRESSION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 58


state 39

   22 ARITHMETIC_OP: PLUS .

    $default  reduce using rule 22 (ARITHMETIC_OP)


state 40

   23 ARITHMETIC_OP: MINUS .

    $default  reduce using rule 23 (ARITHMETIC_OP)


state 41

   24 ARITHMETIC_OP: TIMES .

    $default  reduce using rule 24 (ARITHMETIC_OP)


state 42

   25 ARITHMETIC_OP: DIVIDE .

    $default  reduce using rule 25 (ARITHMETIC_OP)


state 43

   15 LOGICAL_OP: AND .

    $default  reduce using rule 15 (LOGICAL_OP)


state 44

   16 LOGICAL_OP: OR .

    $default  reduce using rule 16 (LOGICAL_OP)


state 45

   27 ARITHMETIC_OP: MOD .

    $default  reduce using rule 27 (ARITHMETIC_OP)


state 46

   26 ARITHMETIC_OP: POW .

    $default  reduce using rule 26 (ARITHMETIC_OP)


state 47

   17 LOGICAL_OP: BITWISE_AND .

    $default  reduce using rule 17 (LOGICAL_OP)


state 48

   18 LOGICAL_OP: BITWISE_OR .

    $default  reduce using rule 18 (LOGICAL_OP)


state 49

   19 LOGICAL_OP: LESS_THAN .

    $default  reduce using rule 19 (LOGICAL_OP)


state 50

   20 LOGICAL_OP: GREATER_THAN .

    $default  reduce using rule 20 (LOGICAL_OP)


state 51

   21 LOGICAL_OP: EQUALS_THAN .

    $default  reduce using rule 21 (LOGICAL_OP)


state 52

   29 OPERATOR: LOGICAL_OP .

    $default  reduce using rule 29 (OPERATOR)


state 53

   28 OPERATOR: ARITHMETIC_OP .

    $default  reduce using rule 28 (OPERATOR)


state 54

   34 EXPRESSION: TERM OPERATOR . EXPRESSION

    INTEGER_LITERAL   shift, and go to state 29
    FLOAT_LITERAL     shift, and go to state 30
    ID                shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 31

    TERM        go to state 32
    EXPRESSION  go to state 59
    VARIABLES   go to state 34


state 55

   40 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS . BLOCK ELSE_STATEMENT

    LEFT_BRACKET  shift, and go to state 7

    BLOCK  go to state 60


state 56

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END . EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INTEGER_LITERAL   shift, and go to state 29
    FLOAT_LITERAL     shift, and go to state 30
    ID                shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 31

    TERM        go to state 32
    EXPRESSION  go to state 61
    VARIABLES   go to state 34


state 57

   39 ASSIGNMENT: TYPE VARIABLES EQUALS EXPRESSION .

    $default  reduce using rule 39 (ASSIGNMENT)


state 58

   35 EXPRESSION: LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS .

    $default  reduce using rule 35 (EXPRESSION)


state 59

   34 EXPRESSION: TERM OPERATOR EXPRESSION .

    $default  reduce using rule 34 (EXPRESSION)


state 60

   40 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK . ELSE_STATEMENT

    ELSE  shift, and go to state 62

    $default  reduce using rule 42 (ELSE_STATEMENT)

    ELSE_STATEMENT  go to state 63


state 61

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION . END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    END  shift, and go to state 64


state 62

   41 ELSE_STATEMENT: ELSE . STATEMENT

    INT_TYPE      shift, and go to state 1
    FLOAT_TYPE    shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    CHAR_TYPE     shift, and go to state 4
    STRING_TYPE   shift, and go to state 5
    ID            shift, and go to state 6
    LEFT_BRACKET  shift, and go to state 7
    IF            shift, and go to state 8
    FOR           shift, and go to state 9

    STATEMENT      go to state 65
    TYPE           go to state 13
    VARIABLES      go to state 14
    BLOCK          go to state 15
    ASSIGNMENT     go to state 16
    IF_STATEMENT   go to state 17
    FOR_STATEMENT  go to state 18


state 63

   40 IF_STATEMENT: IF LEFT_PARENTHESIS EXPRESSION RIGHT_PARENTHESIS BLOCK ELSE_STATEMENT .

    $default  reduce using rule 40 (IF_STATEMENT)


state 64

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END . ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    INT_TYPE      shift, and go to state 1
    FLOAT_TYPE    shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    CHAR_TYPE     shift, and go to state 4
    STRING_TYPE   shift, and go to state 5
    ID            shift, and go to state 6

    TYPE        go to state 13
    VARIABLES   go to state 14
    ASSIGNMENT  go to state 66


state 65

   41 ELSE_STATEMENT: ELSE STATEMENT .

    $default  reduce using rule 41 (ELSE_STATEMENT)


state 66

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT . RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    RIGHT_PARENTHESIS  shift, and go to state 67


state 67

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS . LEFT_BRACKET STATEMENTS RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 68


state 68

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET . STATEMENTS RIGHT_BRACKET

    INT_TYPE      shift, and go to state 1
    FLOAT_TYPE    shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    CHAR_TYPE     shift, and go to state 4
    STRING_TYPE   shift, and go to state 5
    ID            shift, and go to state 6
    LEFT_BRACKET  shift, and go to state 7
    IF            shift, and go to state 8
    FOR           shift, and go to state 9

    STATEMENTS     go to state 69
    STATEMENT      go to state 12
    TYPE           go to state 13
    VARIABLES      go to state 14
    BLOCK          go to state 15
    ASSIGNMENT     go to state 16
    IF_STATEMENT   go to state 17
    FOR_STATEMENT  go to state 18


state 69

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 70


state 70

   43 FOR_STATEMENT: FOR LEFT_PARENTHESIS ASSIGNMENT END EXPRESSION END ASSIGNMENT RIGHT_PARENTHESIS LEFT_BRACKET STATEMENTS RIGHT_BRACKET .

    $default  reduce using rule 43 (FOR_STATEMENT)
